{"version":3,"sources":["components/reportCatalog/logo.svg","../node_modules/typescript/lib sync","resources/images/GBeacon/Acc_Logo_All_White_RGB.svg","components/reportCatalog/home-comp/body-components/logo.svg","components/main-body/embed/Embed.tsx","Config.ts","components/top-bar/top-bar.jsx","components/main-body/embed/sub-component/ViewsModal/viewsModal.jsx","components/authentication/AuthProvider.tsx","components/authentication/userAuthentication.tsx","components/main-body/Body.jsx","OldHome.jsx","subsites/Growth-Beacon/GB_Home.jsx","subsites/Growth-Beacon/GB_Priorities.jsx","subsites/Growth-Beacon/GB_Industries.jsx","subsites/Growth-Beacon/GB.jsx","components/reportCatalog/SideBar.jsx","components/reportCatalog/reportPage-comp/mainBody.jsx","subsites/reportCatalog/ReportPage.jsx","components/reportCatalog/rClgTopBar.jsx","components/reportCatalog/home-comp/body-components/ReportPreview.jsx","components/reportCatalog/home-comp/body-components/Gallery.jsx","components/reportCatalog/home-comp/Body.jsx","subsites/reportCatalog/rClgHome.jsx","subsites/TestWork47/Report.jsx","subsites/TestWork48/Report.jsx","App.jsx","index.tsx"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","reportContainer","reportRef","loading","btnRef","EuropebtnRef","fullSbtnRef","LayoutbtnRef","report","scopes","clientId","workspaceId","reportId","tenantId","Top_bar","service","Service","factories","hpmFactory","wpmpFactory","routerFactory","className","to","concat","this","props","section","xmlns","width","height","viewBox","data-name","transform","d","href","fill","stroke-width","cx","cy","r","stroke","React","Component","ViewsModal","class","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","onClick","captureDropdown","document","getElementById","style","display","aria-controls","handleSave2ViewsClick","handleCopyClick","novalidate","for","placeholder","required","readonly","sctCopy","divCopy","sctSave","divSave","copyMsg","MyAuthenticationProvider","Config","body","client_id","client_secret","scope","grant_type","axios","post","qs","response","status","data","access_token","powerbi","accessToken","embedUrl","Embed","state","error","createRef","console","log","Children","count","children","Fragment","ref","data-toggle","aria-haspopup","aria-expanded","reportContainer2","render","setTargetPath","window","location","length","textContent","forEach","line","appendChild","createTextNode","createElement","initializeEmbed","domNode","ReactDOM","findDOMNode","addEventListener","getSlicers","EdomNode","setMarketUnit","fsdomNode","fullScreen","embedReport","setButtons","newPath","linkObj","setAttribute","setTimeout","click","getTargetPath","pageName","page","toString","split","embedConfiguration","tokenType","models","TokenType","Aad","settings","background","BackgroundType","Transparent","visualRenderedEvents","panes","filters","visible","pageNavigation","bookmarks","bookmark","embed","report1","off","on","setLayoutDropdowns","setCaptureViews","setAppliedFilters","event","errorMsg","detail","newPage","name","displayName","a","createLink","newURL","url","parent","referrer","replace","history","pushState","authenticate","bookmarksManager","getBookmarks","capture","personalizeVisuals","capturedBookmark","btnPrint","onclick","print","errors","visualsDropdown","layoutsDropdown","bookmarksDropdown","colorsDropdown","closeSavedViews","savedViews","captureView","chooseVisuals","chooseLayout","chooseColors","btnApplyFilters","btnSaveFilters","writeAppliedFilters","btnHome","navigateHomeAndBack","btnIndustries","btnPriorities","getPages","pages","filter","isActive","shareURL","onBookmarkClicked","copyLink","onBookmarkCaptureClicked","capturedViewname","viewname","value","bookmarkCounter","labelElement","btnElement","TitleElement","btnDelete","fullElement","remove","spanElement","bookmarksList","append","modal","linkInput","select","execCommand","copiedMsg","btnCopyLink","color","element","entries","getElementsByClassName","i","bookmarkId","currentBookmark","getAttribute","applyState","innerHTML","bookmarksList2","shareUrl","btnCopySct","btnSaveView","getVisuals","visuals","charts","visual","substring","undefined","title","reportVisuals","map","checked","layoutVisuals","reportLayouts","N","Ncols","onCheckboxClicked","checkbox","renderVisuals","inputElement","secondSpanElement","checkboxTitleElement","onLayoutClicked","layout","btnLayout","Lwidth","pageWidth","sideTab","N_Rows","Math","ceil","pageHeight","topTab","Lheight","defaultLayout","displayState","mode","VisualContainerDisplayMode","Hidden","pageSize","PageSizeType","Custom","pageLayout","visualsLayout","j","x","y","floor","Visible","reportSection","layoutType","LayoutType","customLayout","displayOption","DisplayOption","FitToPage","pagesLayout","updateSettings","hasOwnProperty","hasLayout","MobilePortrait","hasLayoutText","pageWithSlicer","MobileLandscape","getFilters","slicers","slType","getSlicerState","MarketUnit","pMarketTarget","table","column","iMarketTarget","slcMarket","slicer","targets","target","slicerFilter","$schema","operator","values","filterType","FilterType","Basic","setSlicerState","iServices","pServices","slcServices","oldAppliedFilters","getAppliedFilters","stateService","stateMarket","appliedFilters","slcService","slcStateMarket","slcStateService","fullscreen","reset","thisObj","msalConfig","auth","config","authority","loginRequest","msalInstance","UserAgentApplication","options","authProvider","Client","initWithMiddleware","updateProfilePicture","handleRedirectCallback","setUsername","account","tryRefreshUserPermissions","getembedUrl","setState","getAccount","acquireTokenSilent","then","catch","err","acquireTokenRedirect","pathname","loginRedirect","fetch","headers","method","ok","workspace","errorMessage","push","get","json","username","welcome","innerText","UserAuthentication","orgRedirectTo","redirectTo","GB_Home","src","Acc_Logo_All_White_RGB","GB_Priorities","sendHome","GB_Industries","SideBar","logo","alt","userPage","userName","toLowerCase","reverse","join","peopleLink","RP_MainBody","R_Name","align","frameborder","ReportPage","ReportPreview","linkTo","shrt_Summary","Gallery","reports","key","MainBody","RClgHome","targetPath","TestReport","TestReport48","App","R_link","bind","useNavigate","navigate","newTargetPath","path","exact","StrictMode","basename"],"mappings":"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","file":"static/js/main.710e1375.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.792ea268.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 242;","module.exports = __webpack_public_path__ + \"static/media/Acc_Logo_All_White_RGB.82dc2419.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.792ea268.svg\";","// ----------------------------------------------------------------------------\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n// ----------------------------------------------------------------------------\r\n\r\nimport React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { UserAgentApplication, AuthError, AuthResponse } from \"msal\";\r\nimport { service, factories, models, IEmbedConfiguration, Report, VisualDescriptor } from \"powerbi-client\";\r\nimport CaptureModal from \"./sub-component/Modal/modal\";\r\n\r\n// import { PowerBIEmbed, EventHandler } from 'powerbi-client-react';\r\nimport \"./Embed.css\";\r\nimport \"./dropdown.css\"\r\nimport \"../Body.css\";\r\nimport * as config from \"../../../Config\";\r\nimport { workspaceId } from '../../../Config';\r\nimport { PseudoBigInt } from \"typescript\";\r\nimport ViewsModal from \"./sub-component/ViewsModal/viewsModal\";\r\n\r\nimport { Export, ExportProp } from \"./sub-component/Export/export\";\r\n\r\n// import \"isomorphic-fetch\"; // or import the fetch polyfill you installed\r\nimport { Client, ClientOptions, AuthenticationProvider} from \"@microsoft/microsoft-graph-client\"; // To get profile pics\r\nimport { MyAuthenticationProvider } from \"../../authentication/AuthProvider\";\r\n\r\n// import { naigateTo } from \"../../navigation/navigation\";\r\nimport { Bookmark, UpdateApp } from './sub-component/Export/models';\r\n\r\nimport { buildThemePalette } from \"./sub-component/ColorThemes/colorSelector\";\r\nimport { stringify } from \"qs\";\r\n\r\nconst powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\r\n\r\n// const [isExportInProgress, setIsExportInProgress] = useState<boolean>(false);\r\n// const [error, setError] = useState<string>('');\r\n// const [state, setState] = useState(0);\r\n\r\nlet accessToken = \"\";\r\nlet embedUrl = \"\";\r\nlet reportContainer: HTMLElement;\r\nlet reportRef: React.Ref<HTMLDivElement>;\r\nlet loading: JSX.Element;\r\n// let btnGetFilter: HTMLButtonElement;\r\nlet btnRef: React.Ref<HTMLButtonElement>;\r\nlet EuropebtnRef: React.Ref<HTMLButtonElement>;\r\nlet fullSbtnRef: React.Ref<HTMLButtonElement>;\r\nlet LayoutbtnRef: React.Ref<HTMLButtonElement>;\r\nlet report: Report;\r\n// const navigate = useNavigate();\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface AppProps {\r\n     report:string; workspace:string; page:string;  \r\n     redirectTo?:string; setTargetPath(targetPath:string):any; sendHome():any;\r\n     getTargetPath():string|null;\r\n     setAppliedFilters(appliedFilters:models.ISlicerState[]|null):void;\r\n     getAppliedFilters():models.ISlicerState[]|null;\r\n     // setAppliedFilters={this.props.setAppliedFilters}\r\n     // getAppliedFilters={this.props.getAppliedFilters}\r\n\r\n     // isExportInProgress: boolean;\r\n\t// setError: { (error: string): void };\r\n\t// toggleExportProgressState: { (): void };\r\n\t// // selectedBookmark: {(): Promise<Bookmark|null>};\r\n\t// updateApp: UpdateApp;\r\n};\r\ninterface AppState { accessToken: string; embedUrl: string; error: string[] };\r\n\r\nclass Embed extends React.Component<AppProps, AppState> {\r\n     \r\n     constructor(props: AppProps) {\r\n          super(props);\r\n\r\n          this.state = { accessToken: \"\", embedUrl: \"\", error: [] };\r\n\r\n          reportRef = React.createRef();\r\n          btnRef = React.createRef();\r\n          EuropebtnRef = React.createRef();\r\n          LayoutbtnRef = React.createRef();\r\n          fullSbtnRef = React.createRef()\r\n\r\n          console.log(React.Children.count(this.props.children))\r\n          // Report container\r\n          loading = (\r\n               <React.Fragment>\r\n                    {this.props.children}\r\n                    <div className={!React.Children.count(this.props.children)\r\n                         ?\"full-screen\"\r\n                         :\"main-body\"\r\n                         }\r\n                    >\r\n                         <div id=\"reportEnviroment\">\r\n                              <button\r\n                                   id=\"btnGetFilter\"\r\n                                   ref={btnRef}\r\n                                   className=\"btn btn-action\"\r\n                                   // onClick={() => this.getFilters()}\r\n                                   // className=\"IncBtn\"\r\n                              >\r\n                                   Get Filters\r\n                              </button>\r\n                              <button\r\n                                   id=\"btnSetEurope\"\r\n                                   ref={EuropebtnRef}\r\n                                   className=\"btn btn-action\"\r\n                                   // onClick={() => this.getFilters()}\r\n                                   // className=\"IncBtn\"\r\n                              >\r\n                                   Set to Europe\r\n                              </button>\r\n                              \r\n                              <button id=\"btnFullScreen\"\r\n                                   className=\"btn btn-action\"\r\n                                   ref={fullSbtnRef}\r\n                              >\r\n                                   Full Screen\r\n                              </button>\r\n\r\n                              <button\r\n                                   id=\"btnPrint\"\r\n                                   className=\"btn btn-action\"\r\n                                   // ref={EuropebtnRef}\r\n                                   // onClick={() => this.getFilters()}\r\n                                   // className=\"IncBtn\"\r\n                              >\r\n                                   Export to PDF\r\n                              </button>\r\n\r\n                              <div className=\"dropdown\">\r\n                                   <button className=\"btn btn-action\" type=\"button\" id=\"saved-views-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        Saved Views\r\n                                   </button>\r\n                                   <ul className=\"dropdown-menu checkbox-menu allow-focus\" role=\"menu\" \r\n                                        id=\"bookmarks-list\" aria-labelledby=\"display-btn\"\r\n                                   >\r\n                                        <label className=\"close-dropdown\">\r\n                                             <button id=\"close-btn\" className=\"close\" aria-label=\"Close bookmarks dropdown\">\r\n                                                  X\r\n                                                  {/* <img role=\"presentation\" id=\"close-list-btn\" src=\"img/cross.svg\" alt=\"Close\"> */}\r\n                                             </button>\r\n                                        </label>\r\n                                   </ul>\r\n                              </div>\r\n\r\n                              <div className=\"dropdown\">\r\n                                   <button className=\"btn btn-action\" type=\"button\" id=\"capture-views-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        Capture Views\r\n                                   </button>\r\n                                   {/* <ul role=\"menu\" className=\"dropdown-menu checkbox-menu allow-focus\" id=\"capture-list\" aria-labelledby=\"choose-visuals-btn\">\r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" id=\"btn-save2-my-views\">\r\n                                                  Save to \"My views\"\r\n                                             </button>\r\n                                        </li>\r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" id=\"btn-copy-link\">\r\n                                                  Copy Link\r\n                                             </button>\r\n                                        </li>\r\n\r\n                                   </ul> */}\r\n                                   \r\n                                   {/* <ViewsModal></ViewsModal> */}\r\n\r\n                                   \r\n                              </div>\r\n\r\n                              <ViewsModal id=\"captureModal\"></ViewsModal>\r\n\r\n                              <div className=\"dropdown\">\r\n                                   <button className=\"btn btn-action\" type=\"button\" id=\"choose-visuals-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        Choose Visuals\r\n                                   </button>\r\n                                   <ul role=\"menu\" className=\"dropdown-menu checkbox-menu allow-focus\" id=\"visuals-list\" aria-labelledby=\"choose-layouts-btn\"></ul>\r\n                              </div>\r\n\r\n                              <div className=\"dropdown\">\r\n                                   <button className=\"btn btn-action\" type=\"button\" id=\"choose-layouts-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        Choose Layout\r\n                                   </button>\r\n                                   <ul role=\"menu\" className=\"dropdown-menu\" id=\"layouts-list\" aria-labelledby=\"choose-layouts-btn\">\r\n                                        \r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" id=\"btn-1-col\">\r\n                                                  1 Columns\r\n                                             </button>\r\n                                        </li>\r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" id=\"btn-2-col\">\r\n                                                  2 Columns\r\n                                             </button>\r\n                                        </li>\r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" id=\"btn-3-col\">\r\n                                                  3 Columns\r\n                                             </button>\r\n                                        </li>\r\n                                   </ul>\r\n                              </div>\r\n                              <div className=\"dropdown\">\r\n                                   <button\r\n                                        id=\"btnSetLayout\"\r\n                                        ref={LayoutbtnRef}\r\n                                        className=\"btn btn-action\"\r\n                                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n                                        onClick={() => {\r\n                                             let reportContainer2 = document.getElementById(\"reportContainer\")\r\n                                             if (reportContainer2 != null ){\r\n                                                  reportContainer2.style.height = \"90%\";\r\n                                             }\r\n                                             // powerbi.reset(reportContainer);\r\n                                             this.render();\r\n                                        }}\r\n                                        // className=\"IncBtn\"\r\n                                   >\r\n                                        Reset Layout\r\n                                   </button>\r\n                              </div>\r\n\r\n                              <div className=\"dropdown\">\r\n                                   <button className=\"btn btn-action\" type=\"button\" id=\"choose-color-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        Color Palette\r\n                                   </button>\r\n                                   <ul role=\"menu\" className=\"dropdown-menu\" id=\"color-list\" aria-labelledby=\"choose-layouts-btn\">\r\n                                        \r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" \r\n                                                  id=\"btn-Default-color\"\r\n                                             >\r\n                                                  Default\r\n                                             </button>\r\n                                        </li>\r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" \r\n                                                  id=\"btn-Divergent-color\"\r\n                                             >\r\n                                                  Divergent\r\n                                             </button>\r\n                                        </li>\r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" \r\n                                                  id=\"btn-Executive-color\"\r\n                                             >\r\n                                                  Executive\r\n                                             </button>\r\n                                        </li>\r\n                                        <li>\r\n                                             <button role=\"menuitemradio\" className=\"btn-util btn-layout\" \r\n                                                  id=\"btn-Tidal-color\"\r\n                                             >\r\n                                                  Tidal\r\n                                             </button>\r\n                                        </li>\r\n                                   </ul>\r\n                              </div>\r\n\r\n                              <div className=\"dropdown\">\r\n                                   <button className=\"btn btn-action\" type=\"button\" id=\"saveFilters-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        saveFilters\r\n                                   </button>\r\n                                   <button className=\"btn btn-action\" type=\"button\" id=\"applyFilters-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        applyFilters\r\n                                   </button>\r\n\r\n                                   <button className=\"btn btn-action\" type=\"button\" \r\n                                        id=\"RepCatalogHome-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n                                        // onClick={() => {this.navigateTo(\"/GrowthBeacon\")}}\r\n                                   >\r\n                                        Home\r\n                                   </button>\r\n                                   <Link\r\n                                        id=\"ResetLoginLink\"\r\n                                        to=\"/\"\r\n                                        className= \"invisible\"\r\n                                   ></Link>\r\n                              </div>\r\n\r\n                              <div\r\n                                   id=\"reportContainer\"\r\n                                   ref={reportRef} >\r\n                                        \r\n                                   Loading the report...\r\n                              </div>\r\n                              \r\n                              {/* <CaptureModal></CaptureModal> */}\r\n                         </div>\r\n                    </div>\r\n               </React.Fragment>\r\n\r\n               \r\n          );\r\n\r\n          // if (this.state.error.length) {\r\n\r\n          //      // Cleaning the report container contents and rendering the error message in multiple lines\r\n          //      reportContainer.textContent = \"\";\r\n          //      this.state.error.forEach(line => {\r\n          //           reportContainer.appendChild(document.createTextNode(line));\r\n          //           reportContainer.appendChild(document.createElement(\"br\"));\r\n          //      });\r\n          // }\r\n          // else if (this.state.accessToken !== \"\" && this.state.embedUrl !== \"\") {\r\n          //      report = this.initializeEmbed();\r\n          //      this.embedReport(report)\r\n          //      // this.embedReport()\r\n          // }\r\n     }\r\n\r\n    // React function\r\n     render(): JSX.Element {\r\n          this.props.setTargetPath(window.location.href);\r\n          console.log(window.location.href)\r\n\r\n          if (this.state.error.length) {\r\n\r\n               // Cleaning the report container contents and rendering the error message in multiple lines\r\n               reportContainer.textContent = \"\";\r\n               this.state.error.forEach(line => {\r\n                    reportContainer.appendChild(document.createTextNode(line));\r\n                    reportContainer.appendChild(document.createElement(\"br\"));\r\n               });\r\n          }\r\n          else if (this.state.accessToken !== \"\" && this.state.embedUrl !== \"\") {\r\n               \r\n               // this.embedReport(report)\r\n               report = this.initializeEmbed();\r\n               // btnGetFilter.onclick= {() => this.getFilters(report)};\r\n               \r\n               // let domNode = ReactDOM.findDOMNode(btnGetFilter);\r\n               // if(domNode) {\r\n               //      // domNode.addEventListener('click', () => this.getFilters(report));\r\n               //      domNode.addEventListener('click', () => this.getSlicers(report));\r\n               // }\r\n               if (btnRef !== null){\r\n                    let domNode = ReactDOM.findDOMNode(btnRef[\"current\"]);\r\n                    if(domNode) {\r\n                         domNode.addEventListener('click', () => this.getSlicers(report));\r\n                    }\r\n               }\r\n\r\n               if (EuropebtnRef !== null){\r\n                    let EdomNode = ReactDOM.findDOMNode(EuropebtnRef[\"current\"]);\r\n                    if(EdomNode) {\r\n                         EdomNode.addEventListener('click', () => this.setMarketUnit(report, \"Europe\"));\r\n                         // EdomNode.addEventListener('click', () => this.getLayout(report));\r\n                    }\r\n               }\r\n\r\n               if (LayoutbtnRef !== null){\r\n                    let LdomNode = ReactDOM.findDOMNode(LayoutbtnRef[\"current\"]);\r\n                    if(LdomNode) {\r\n                         // LdomNode.addEventListener('click', () => this.setLayout(report));\r\n                         // LdomNode.addEventListener('click', () => this.goBackToReport(report));\r\n                    }\r\n               }\r\n\r\n               if (fullSbtnRef !== null){\r\n                    let fsdomNode = ReactDOM.findDOMNode(fullSbtnRef[\"current\"]);\r\n                    if(fsdomNode) {\r\n                         fsdomNode.addEventListener('click', () => this.fullScreen(report));\r\n                    }\r\n               }\r\n\r\n               \r\n               this.embedReport(report)\r\n\r\n               this.setButtons(report)\r\n          }\r\n          \r\n          return loading;\r\n     }\r\n\r\n     navigateTo(newPath: string) {\r\n          // let navigate = useNavigate();\r\n          // navigate(newPath);\r\n          // document.getElementById(\"ResetLoginLink\")?.click\r\n          let linkObj = document.getElementById(\"ResetLoginLink\");\r\n          if (linkObj){\r\n               linkObj.setAttribute(\"to\", newPath);\r\n\r\n               setTimeout(() =>{\r\n                    if (linkObj) { linkObj.click(); }\r\n               }, 1000);\r\n               // linkObj.click();\r\n          }\r\n          // let linkObj = document.createElement(\"Link\");\r\n          // linkObj.set\r\n\r\n          // window.location.href = '/';\r\n     }\r\n\r\n     navigateHomeAndBack() {\r\n          // let navigate = useNavigate();\r\n          // navigate(newPath);\r\n          // document.getElementById(\"ResetLoginLink\")?.click\r\n\r\n          console.log(this.props.getTargetPath())\r\n          this.props.setTargetPath(window.location.href)\r\n          setTimeout(() =>{\r\n               console.log(this.props.getTargetPath())\r\n               // document.getElementById(\"LinkEmbedHome\")?.click();\r\n               let linkObj = document.getElementById(\"ResetLoginLink\");\r\n               if (linkObj){\r\n                    linkObj.click();\r\n               }\r\n          }, 1000);\r\n          \r\n\r\n          // window.location.href = '/';\r\n     }\r\n\r\n     initializeEmbed(){\r\n          let pageName = this.props.page;\r\n          let state = window.location.toString().split(\"?state=\")[1]\r\n          if (state == null) {\r\n               state = \"\"\r\n          }\r\n          if (window.location.toString().split(\"?page=\")[1] == null){\r\n               pageName = this.props.page;\r\n          } else {\r\n               pageName = window.location.toString().split(\"?page=\")[1].split(\"?state=\")[0]\r\n          }\r\n          const embedConfiguration: IEmbedConfiguration = {\r\n               type: \"report\",\r\n               tokenType: models.TokenType.Aad,\r\n               accessToken,\r\n               embedUrl,\r\n               id: this.props.report,\r\n               pageName: pageName,\r\n               \r\n               // Enable this setting to remove gray shoulders from embedded report\r\n               settings: {\r\n                    background: models.BackgroundType.Transparent,\r\n                    visualRenderedEvents: true,\r\n                    panes: {\r\n                         filters: {\r\n                              visible: true\r\n                         },\r\n                         pageNavigation: {\r\n                              visible: false\r\n                         },\r\n                         bookmarks: {\r\n                              visible: true\r\n                         }\r\n                    }\r\n               },\r\n               bookmark: {\r\n                    state: state\r\n               }              \r\n          };\r\n\r\n          // Get a reference to the embedded report HTML element\r\n          // let embedContainer = $('#embedContainer')[0];\r\n          // const report = powerbi.embed(reportContainer, embedConfiguration);\r\n          \r\n          // let report: Report;\r\n          let report1 = powerbi.embed(reportContainer, embedConfiguration) as Report;\r\n          return report1\r\n     }\r\n\r\n     async embedReport(report1: Report){\r\n\r\n          // let loadedResolve, reportLoaded = new Promise((res, rej) => { loadedResolve = res; });\r\n          // let renderedResolve, reportRendered = new Promise((res, rej) => { renderedResolve = res; });\r\n\r\n          \r\n          // const report = powerbi.Repo\r\n\r\n          // Clear any other loaded handler events\r\n          report1.off(\"loaded\");\r\n          \r\n          // Triggers when a content schema is successfully loaded\r\n          report1.on(\"loaded\", () => {\r\n               console.log(\"Report load successful\");\r\n               this.setLayoutDropdowns(report1)\r\n               this.setCaptureViews(report1)\r\n               this.setAppliedFilters(report1)\r\n\r\n          });\r\n\r\n          // Clear any other rendered handler events\r\n          report1.off(\"rendered\");\r\n\r\n          // Triggers when a content is successfully embedded in UI\r\n          report1.on(\"rendered\", function () {\r\n               console.log(\"Report render successful\");\r\n          });\r\n\r\n          // Clear any other error handler event\r\n          report1.off(\"error\");\r\n\r\n          // Below patch of code is for handling errors that occur during embedding\r\n          report1.on(\"error\", function (event) {\r\n               const errorMsg = event.detail;\r\n\r\n               // Use errorMsg variable to log error in any destination of choice\r\n               console.error(errorMsg);\r\n          });\r\n          \r\n          // await reportLoaded;\r\n\r\n          // Insert here the code you want to run after the report1 is loaded\r\n\r\n          // Insert here the code you want to run after the report is rendered\r\n\r\n          \r\n          // await reportRendered;\r\n                    \r\n           // report.off removes all event handlers for a specific event\r\n           report1.off(\"pageChanged\");\r\n\r\n           // report1.on will add an event listener.\r\n           report1.on(\"pageChanged\", function (event: CustomEvent) {\r\n                \r\n                let page = event.detail.newPage as models.IPage;\r\n                \r\n                console.log(\"Event - pageChanged:\\nPage changed to \\\"\" + page.name + \"\\\" - \\\"\" + page.displayName + \"\\\"\");\r\n           });\r\n\r\n          //  report1.on(\"buttonClicked\", async () => {\r\n          //      // change URL silently\r\n          //      let newURL = await this.createLink(report1)\r\n\r\n          //      let url = (window.location != window.parent.location) ?\r\n          //           document.referrer :\r\n          //           document.location.href;\r\n          //      url = url.split(\"?\")[0]\r\n          //      newURL.replace(url, \"\")\r\n          //      window.history.pushState(\"\", \"\", newURL);\r\n          //  })\r\n\r\n          //  report1.on(\"visualClicked\", async () => {\r\n          report1.on(\"visualRendered\", async () => {\r\n               // change URL silently \r\n               let newURL = await this.createLink(report1)\r\n\r\n               let url = (window.location != window.parent.location) ?\r\n                    document.referrer :\r\n                    document.location.href;\r\n               url = url.split(\"?\")[0]\r\n               newURL.replace(url, \"\")\r\n               window.history.pushState(\"\", \"\", newURL);\r\n           })\r\n           \r\n           // Select Run and change to a different page.\r\n           // You should see an entry in the Log window.\r\n \r\n           console.log(\"Select different page to see events in Log window.\");\r\n\r\n\r\n          //  report1.on(\"buttonClicked\", function (event:CustomEvent){\r\n          //      // Get the filters applied to the report.\r\n          //      try {\r\n          //           const filters = report.getFilters();\r\n          //           console.log(filters);\r\n          //      }\r\n          //      catch (errors) {\r\n          //           console.log(errors);\r\n          //      }\r\n          //  });\r\n\r\n           \r\n     }\r\n     \r\n     // React function\r\n     componentDidMount(): void {\r\n          this.props.setTargetPath(window.location.href);\r\n          console.log(\"TARGET PATH:   \" + window.location.href);\r\n\r\n          \r\n          if (reportRef !== null) {\r\n               reportContainer = reportRef[\"current\"];\r\n          }\r\n          // if (btnRef !== null){\r\n          //      btnGetFilter = btnRef[\"current\"];\r\n          // }\r\n\r\n          // User input - null check\r\n          if (config.workspaceId === \"\" || config.reportId === \"\") {\r\n               this.setState({ error: [\"Please assign values to workspace Id and report Id in Config.ts file\"] })\r\n          } else {\r\n\r\n               // Authenticate the user and generate the access token\r\n               this.authenticate();\r\n          }\r\n\r\n          // this.getFilters()\r\n          \r\n     }\r\n\r\n     async setButtons(report1: Report) {\r\n          let btnPrint = document.getElementById(\"btnPrint\")\r\n\r\n          // buildThemePalette(report1)\r\n\r\n          // const [isExportInProgress, setIsExportInProgress] = useState<boolean>(false);\r\n          // const [error, setError] = useState<string>('');\r\n          // const [state, setState] = useState(0);\r\n\r\n          // function toggleExportProgressState() : void {\r\n          //      setIsExportInProgress((prevState) => !prevState);\r\n          // }\r\n          async function getSelectedBookmark(): Promise<Bookmark|null> {\r\n               let bookmarks = await report1.bookmarksManager.getBookmarks()\r\n               let capturedBookmark = await report1.bookmarksManager.capture({ personalizeVisuals: true });\r\n               if (capturedBookmark) {\r\n                    return capturedBookmark;\r\n               }\r\n\r\n               return null;\r\n               // capturedBookmark.state\r\n               // return bookmarks.find((bookmark) => {\r\n               //      return bookmark;\r\n               // });\r\n          }\r\n          \r\n          if (btnPrint != null) {\r\n               btnPrint.onclick = () => {\r\n                    try {\r\n                         report1.print();\r\n                         \r\n                         // // report1.\r\n                         // // let exportProp = {\r\n                         // //      isExportInProgress: true,\r\n                         // //      setError: \"\",\r\n                         // //      toggleExportProgressState: void ,\r\n                         // //      selectedBookmark: Bookmark,\r\n                         // //      updateApp: UpdateApp,\r\n                         // // }\r\n                         // <Export\r\n                         //      // isExportInProgress={isExportInProgress}\r\n                         //      // setError={this.props.setError}\r\n                         //      // toggleExportProgressState={ toggleExportProgressState}\r\n                         //      // selectedBookmark={ () => getSelectedBookmark()}\r\n                         //      // updateApp={setState}\r\n                         //      isExportInProgress={this.props.isExportInProgress}\r\n                         //      setError={this.props.setError}\r\n                         //      toggleExportProgressState={this.props.toggleExportProgressState}\r\n                         //      selectedBookmark={ () => getSelectedBookmark()}\r\n                         //      updateApp={this.props.updateApp}\r\n                         // />\r\n                    }\r\n                    catch (errors) {\r\n                         console.log(errors);\r\n                    }\r\n               }\r\n          }\r\n\r\n          function handleSave2ViewsClick() {\r\n               let sctCopy = document.getElementById(\"copy-link-btn\");\r\n               let divCopy = document.getElementById(\"capture-view-div\");\r\n               let sctSave = document.getElementById(\"save-view-btn\");\r\n               let divSave = document.getElementById(\"save-view-div\");\r\n     \r\n               if ((sctCopy != null) && (sctSave != null)) {\r\n                    sctCopy.className = \"btn-modal btn-links\";\r\n                    sctSave.className = \"btn-modal btn-links btn-active\";\r\n     \r\n                    if ((divCopy != null) && (divSave != null)) {\r\n                         divCopy.style.display = \"none\";\r\n                         divSave.style.display = \"block\";\r\n                    }\r\n               }\r\n          }\r\n          // Dropdowns Management\r\n          // let captureDropdown = document.getElementById(\"capture-list\") \r\n          let captureDropdown = document.getElementById(\"captureModal\")\r\n\r\n          let visualsDropdown = document.getElementById(\"visuals-list\")\r\n          let layoutsDropdown = document.getElementById(\"layouts-list\")\r\n          let bookmarksDropdown = document.getElementById(\"bookmarks-list\")\r\n\r\n          let colorsDropdown = document.getElementById(\"color-list\")\r\n\r\n          let closeSavedViews = document.getElementById(\"close-btn\")\r\n          if (closeSavedViews != null) {\r\n               closeSavedViews.onclick = () => {\r\n                    if (bookmarksDropdown != null){\r\n                         bookmarksDropdown.style.display = \"none\";\r\n                    }\r\n               }\r\n          }\r\n\r\n          let savedViews = document.getElementById(\"saved-views-btn\")\r\n          if (savedViews != null) {\r\n               savedViews.onclick = () => {\r\n                    if (bookmarksDropdown != null){\r\n                         if (bookmarksDropdown.style.display == \"block\"){\r\n                              bookmarksDropdown.style.display = \"none\";\r\n                         } else {\r\n                              \r\n                              bookmarksDropdown.style.display = \"block\";\r\n                              if (visualsDropdown != null){\r\n                                   visualsDropdown.style.display = \"none\";\r\n                              }\r\n                              if (layoutsDropdown != null){\r\n                                   layoutsDropdown.style.display = \"none\";\r\n                              }\r\n                              if (captureDropdown != null){\r\n                                   captureDropdown.style.display = \"none\";\r\n                              }\r\n                              if (colorsDropdown != null){\r\n                                   colorsDropdown.style.display = \"none\";\r\n                              }\r\n                         }\r\n                    }\r\n               }\r\n          }\r\n          let captureView = document.getElementById(\"capture-views-btn\")\r\n          if (captureView != null) {\r\n               captureView.onclick = () => {\r\n                    if (captureDropdown != null){\r\n                         if (captureDropdown.style.display == \"block\"){\r\n                              captureDropdown.style.display = \"none\";\r\n                         } else {\r\n                              handleSave2ViewsClick()\r\n                              captureDropdown.style.display = \"block\";\r\n                              if (visualsDropdown != null){\r\n                                   visualsDropdown.style.display = \"none\";\r\n                              }\r\n                              if (layoutsDropdown != null){\r\n                                   layoutsDropdown.style.display = \"none\";\r\n                              }\r\n                              if (bookmarksDropdown != null){\r\n                                   bookmarksDropdown.style.display = \"none\";\r\n                              }\r\n                              if (colorsDropdown != null){\r\n                                   colorsDropdown.style.display = \"none\";\r\n                              }\r\n                         }\r\n                    }\r\n               }\r\n          }\r\n          let chooseVisuals = document.getElementById(\"choose-visuals-btn\")\r\n          if (chooseVisuals != null) {\r\n               chooseVisuals.onclick = () => {\r\n                    if (visualsDropdown != null){\r\n                         if (visualsDropdown.style.display == \"block\"){\r\n                              visualsDropdown.style.display = \"none\";\r\n                         } else {\r\n                              visualsDropdown.style.display = \"block\";\r\n                              if (layoutsDropdown != null){\r\n                                   layoutsDropdown.style.display = \"none\";\r\n                              }\r\n                              if (captureDropdown != null){\r\n                                   captureDropdown.style.display = \"none\";\r\n                              }\r\n                              if (bookmarksDropdown != null){\r\n                                   bookmarksDropdown.style.display = \"none\";\r\n                              }\r\n                              if (colorsDropdown != null){\r\n                                   colorsDropdown.style.display = \"none\";\r\n                              }\r\n                         }\r\n                    }\r\n               }\r\n          }\r\n\r\n          let chooseLayout = document.getElementById(\"choose-layouts-btn\")\r\n          if (chooseLayout != null) {\r\n               chooseLayout.onclick = () => {\r\n                    if (layoutsDropdown != null){\r\n                         if (layoutsDropdown.style.display == \"block\"){\r\n                              layoutsDropdown.style.display = \"none\";\r\n                         } else {\r\n                              \r\n                              layoutsDropdown.style.display = \"block\";\r\n                              if (visualsDropdown != null){\r\n                                   visualsDropdown.style.display = \"none\";\r\n                              }\r\n                              if (captureDropdown != null){\r\n                                   captureDropdown.style.display = \"none\";\r\n                              }\r\n                              if (bookmarksDropdown != null){\r\n                                   bookmarksDropdown.style.display = \"none\";\r\n                              }\r\n                              if (colorsDropdown != null){\r\n                                   colorsDropdown.style.display = \"none\";\r\n                              }\r\n                         }\r\n                    }\r\n               }\r\n          }\r\n\r\n          let chooseColors = document.getElementById(\"choose-color-btn\")\r\n          if (chooseColors != null) {\r\n               chooseColors.onclick = () => {\r\n                    if (colorsDropdown != null){\r\n                         if (colorsDropdown.style.display == \"block\"){\r\n                              colorsDropdown.style.display = \"none\";\r\n                         } else {\r\n                              colorsDropdown.style.display = \"block\";\r\n                              if (layoutsDropdown != null){\r\n                                   layoutsDropdown.style.display = \"none\";\r\n                              }\r\n                              if (captureDropdown != null){\r\n                                   captureDropdown.style.display = \"none\";\r\n                              }\r\n                              if (bookmarksDropdown != null){\r\n                                   bookmarksDropdown.style.display = \"none\";\r\n                              }\r\n                              if (visualsDropdown != null){\r\n                                   visualsDropdown.style.display = \"none\";\r\n                              }\r\n                         }\r\n                    }\r\n               }\r\n          }\r\n\r\n          let btnApplyFilters = document.getElementById(\"applyFilters-btn\")\r\n          if (btnApplyFilters) {\r\n               btnApplyFilters.onclick = () => {\r\n                    this.setAppliedFilters(report1)\r\n               }\r\n          }\r\n\r\n          let btnSaveFilters = document.getElementById(\"saveFilters-btn\")\r\n          if (btnSaveFilters) {\r\n               btnSaveFilters.onclick = () => {\r\n                    this.writeAppliedFilters(report1)\r\n               }\r\n          }\r\n\r\n          let btnHome = document.getElementById(\"RepCatalogHome-btn\");\r\n          if (btnHome != null) {\r\n               // btnHome.\r\n               // btnHome\r\n               btnHome.onclick = () => {\r\n                    // console.log(this.props.getTargetPath())\r\n                    // this.props.setTargetPath(window.location.href)\r\n                    // setTimeout(() =>{\r\n                    //      console.log(this.props.getTargetPath())\r\n                    //      // document.getElementById(\"LinkEmbedHome\")?.click();\r\n                    //      this.navigateTo(\"/\")\r\n                    // }, 1000);\r\n                    this.navigateHomeAndBack()\r\n               }\r\n          }\r\n\r\n\r\n          let btnIndustries = document.getElementById(\"Btn_GBIndustries\");\r\n          if (btnIndustries != null) {\r\n               // btnIndustries.\r\n               // btnIndustries\r\n               btnIndustries.onclick = () => {\r\n                    this.writeAppliedFilters(report1)\r\n                    setTimeout(() =>{\r\n                         document.getElementById(\"Link_GBIndustries\")?.click();\r\n                    }, 1000);\r\n               }\r\n          }\r\n\r\n          let btnPriorities = document.getElementById(\"Btn_GBPriorities\");\r\n          if (btnPriorities != null) {\r\n               // btnPriorities.\r\n               // btnPriorities\r\n               btnPriorities.onclick = () => {\r\n                    this.writeAppliedFilters(report1)\r\n                    setTimeout(() =>{\r\n                         document.getElementById(\"Link_GBPriorities\")?.click();\r\n                    }, 1000);\r\n                    \r\n               }\r\n          }\r\n\r\n     }\r\n\r\n     async createLink(report1:Report):Promise<string> {\r\n\r\n          // To get the URL of the parent page\r\n          let url = (window.location != window.parent.location) ?\r\n               document.referrer :\r\n               document.location.href;\r\n          url = url.split(\"?\")[0]\r\n          // Capture the report's current state with personalized visuals\r\n          const capturedBookmark = await report1.bookmarksManager.capture({ personalizeVisuals: true });\r\n     \r\n          // Build bookmark element\r\n          let bookmark = {\r\n               // name: \"bookmark_\" + bookmarkCounter,\r\n               state: capturedBookmark.state\r\n          }\r\n\r\n          const pages = await report1.getPages();\r\n          let page = pages.filter(function (page) {\r\n               return page.isActive;\r\n           })[0];\r\n\r\n          let pageName = page.name;\r\n     \r\n          // Build the share bookmark URL\r\n          let shareURL = url + \"?page=\" + pageName + \"?state=\" + bookmark.state;\r\n\r\n          console.log(shareURL)\r\n\r\n          return shareURL;\r\n     }\r\n\r\n     async setCaptureViews(report1: Report){\r\n                    \r\n          let captureDropdown = document.getElementById(\"capture-list\")\r\n\r\n          let bookmarksList = document.getElementById(\"bookmarks-list\")\r\n\r\n          let bookmarkCounter = 1;\r\n\r\n          let bookmarks = await report1.bookmarksManager.getBookmarks();\r\n\r\n          // Reset next bookmark ID\r\n          let nextBookmarkId = 1;\r\n\r\n          // Set bookmarks array to the report's fetched bookmarks\r\n          // bookmarkShowcaseState.bookmarks = bookmarks;\r\n\r\n          // Clear visualDropdown div\r\n          if (bookmarksList != null) {\r\n               // bookmarksList.style.display = \"none\"\r\n               bookmarksList.innerHTML = \"\";\r\n\r\n               // <label className=\"close-dropdown\">\r\n               //      <button id=\"close-btn\" className=\"close\" aria-label=\"Close bookmarks dropdown\">\r\n               //           X\r\n               //      </button>\r\n               // </label>\r\n\r\n               let labelElement = document.createElement(\"label\");\r\n               labelElement.setAttribute(\"className\", \"close-dropdown\");\r\n               // labelElement.setAttribute(\"role\", \"menuitem\");\r\n\r\n               let btnElement = document.createElement(\"button\")\r\n               btnElement.setAttribute(\"id\", \"close-btn\")\r\n               btnElement.setAttribute(\"className\", \"close\");\r\n               \r\n\r\n               btnElement.onclick = () => {\r\n                    let bookmarksList2 = document.getElementById(\"bookmarks-list\")\r\n                    if (bookmarksList2) {bookmarksList2.style.display = \"none\" }\r\n               };\r\n               let TitleElement = document.createTextNode(\"X\");\r\n               btnElement.appendChild(TitleElement);\r\n               \r\n               labelElement.appendChild(btnElement)\r\n          \r\n               let spanElement = document.createElement(\"span\");\r\n               spanElement.setAttribute(\"class\", \"showcase-checkmark\");\r\n               labelElement.appendChild(spanElement);\r\n\r\n               bookmarksList.append(labelElement);\r\n          }\r\n\r\n          async function onBookmarkClicked(element: HTMLButtonElement) {\r\n\r\n               // Set the clicked bookmark as active\r\n               // setBookmarkActive($(element));\r\n               // $(\"input:checkbox\").prop(\"checked\", false);\r\n          \r\n               let entries = document.getElementsByClassName(\"saved-view-entry\")\r\n               for(let i=0; i<entries.length; i++){\r\n                    let btnElement = entries[i];\r\n                    // (btnElement: HTMLButtonElement) => { \r\n                    btnElement.setAttribute(\"class\", \"saved-view-entry\");     \r\n                    // }\r\n               }\r\n               \r\n               element.setAttribute(\"class\", \"saved-view-entry active\")\r\n\r\n               let btnElement = document.getElementById(element.id);\r\n               if (btnElement != null) {\r\n                    btnElement.setAttribute(\"class\", \"saved-view-entry active\")\r\n               }\r\n\r\n               // Get bookmark Id from HTML\r\n               const bookmarkId = element.id;\r\n               // bookmarks = await report1.bookmarksManager.getBookmarks();\r\n               // Find the bookmark in the bookmarks array\r\n               // let currentBookmark = getBookmarkByID(bookmarkId);\r\n               let currentBookmark =  bookmarks.filter( function (bookmark) { \r\n                    return bookmark.name === bookmarkId \r\n               })[0];\r\n\r\n               console.log(currentBookmark)\r\n               \r\n               // Apply the bookmark state\r\n               // if ((currentBookmark != null) && (currentBookmark.state)){\r\n               //      report1.bookmarksManager.applyState(currentBookmark.state);\r\n               //      // console.log(currentBookmark)\r\n               // }\r\n               let state = element.getAttribute(\"state\"); \r\n               if ((state != null)){\r\n                    report1.bookmarksManager.applyState(state);\r\n                    console.log(state)\r\n                    // console.log(currentBookmark)\r\n               }\r\n               \r\n          }\r\n\r\n          // Build the bookmarks list HTML code\r\n          bookmarks.forEach(function (bookmark) {\r\n               \r\n               if (bookmark.state) {\r\n                    let labelElement = document.createElement(\"label\");\r\n                    labelElement.setAttribute(\"class\", \"showcase-checkbox-container\");\r\n                    labelElement.setAttribute(\"role\", \"menuitem\");\r\n                    labelElement.setAttribute(\"id\", bookmark.name + \"_Label\")\r\n\r\n                    let btnElement = document.createElement(\"button\")\r\n                    btnElement.setAttribute(\"id\", bookmark.name)\r\n                    btnElement.setAttribute(\"class\", \"saved-view-entry\");\r\n                    if (bookmark.state){\r\n                         btnElement.setAttribute(\"state\", bookmark.state)\r\n                    }\r\n                    btnElement.onclick = () => {onBookmarkClicked(btnElement);};\r\n                    let TitleElement = document.createTextNode(bookmark.displayName);\r\n                    btnElement.appendChild(TitleElement);\r\n                    \r\n                    labelElement.appendChild(btnElement)\r\n\r\n                    let btnDelete = document.createElement(\"button\")\r\n                    btnDelete.setAttribute(\"id\", bookmark.name + \"_Delete\")\r\n                    btnDelete.setAttribute(\"class\", \"delete-entry-btn\");\r\n                    // if (bookmark.state){\r\n                    //      btnDelete.setAttribute(\"state\", bookmark.state)\r\n                    // }\r\n                    btnDelete.onclick = () => {\r\n                         let fullElement = document.getElementById(btnDelete.id.replace(\"Delete\", \"Label\"));\r\n                         fullElement?.remove()\r\n                    };\r\n                    btnDelete.appendChild(document.createTextNode(\"X\"))\r\n                    labelElement.appendChild(btnDelete)\r\n               \r\n                    let spanElement = document.createElement(\"span\");\r\n                    spanElement.setAttribute(\"class\", \"showcase-checkmark\");\r\n                    labelElement.appendChild(spanElement);\r\n\r\n                    if (bookmarksList != null){\r\n                         bookmarksList.append(labelElement);\r\n                    }\r\n               }\r\n               // console.log(bookmark)\r\n          });\r\n\r\n          function handleCopyClick() {\r\n               let sctCopy = document.getElementById(\"copy-link-btn\");\r\n               let divCopy = document.getElementById(\"capture-view-div\");\r\n               let sctSave = document.getElementById(\"save-view-btn\");\r\n               let divSave = document.getElementById(\"save-view-div\");\r\n               let copyMsg = document.getElementById(\"copy-link-success-msg\");\r\n     \r\n               if ((sctCopy != null) && (sctSave != null)) {\r\n                    sctCopy.className = \"btn-modal btn-links btn-active\";\r\n                    sctSave.className = \"btn-modal btn-links\";\r\n     \r\n                    if ((divCopy != null) && (divSave != null) && (copyMsg != null)) {\r\n                         divCopy.style.display = \"block\";\r\n                         divSave.style.display = \"none\";\r\n                         copyMsg.style.display = \"none\";\r\n                    }\r\n               }\r\n          }\r\n\r\n          let createLink = async () => {\r\n\r\n               // // To get the URL of the parent page\r\n               // let url = (window.location != window.parent.location) ?\r\n               //      document.referrer :\r\n               //      document.location.href;\r\n          \r\n               // // Capture the report's current state with personalized visuals\r\n               // const capturedBookmark = await report1.bookmarksManager.capture({ personalizeVisuals: true });\r\n          \r\n               // // Build bookmark element\r\n               // let bookmark = {\r\n               //      name: \"bookmark_\" + bookmarkCounter,\r\n               //      state: capturedBookmark.state\r\n               // }\r\n\r\n               // const pages = await report1.getPages();\r\n               // let page = pages.filter(function (page) {\r\n               //      return page.isActive;\r\n               //  })[0];\r\n\r\n               // let pageName = page.name;\r\n          \r\n               // Build the share bookmark URL\r\n               let shareUrl = await this.createLink(report1);  // url + \"?page=\" + pageName + \"?state=\" + bookmark.state;\r\n\r\n               console.log(shareUrl)\r\n\r\n               var dummyContent = \"this is to be copied to clipboard\";\r\n               // var dummy = document.createElement(\"input\")\r\n               // var dummy:HTMLInputElement\r\n               \r\n               var linkInput = document.getElementById(\"copy-link-text\") as HTMLInputElement;\r\n               if ((linkInput != null)){\r\n                    // let linkInput:HTMLInputElement = linkInput\r\n                    linkInput.value = shareUrl\r\n                    linkInput.select()\r\n               }     \r\n          }\r\n\r\n          function copyLink() {\r\n               var linkInput = document.getElementById(\"copy-link-text\") as HTMLInputElement;\r\n               if ((linkInput != null)){\r\n                    linkInput.select()\r\n               }\r\n               // appendTo('body').select()\r\n               document.execCommand('copy')\r\n               let copiedMsg = document.getElementById(\"copy-link-success-msg\")\r\n               if ((btnCopyLink != null) && (copiedMsg != null)){ \r\n                    // btnCopyLink.style.color = \"rgba(47, 207, 33)\";\r\n                    // btnCopyLink.textContent = \"Copied\";\r\n                    copiedMsg.style.color = \"rgba(47, 207, 33)\";\r\n                    copiedMsg.style.display = \"block\"\r\n\r\n               };\r\n\r\n               setTimeout(() =>{\r\n                    if ((btnCopyLink != null) && (copiedMsg != null)) { \r\n                         // btnCopyLink.style.color = \"rgba(0, 0, 0)\";\r\n                         // btnCopyLink.textContent = \"Copy Link\";\r\n                         copiedMsg.style.display = \"none\"\r\n                    };\r\n               }, 5000);\r\n          }\r\n          \r\n          let btnCopySct = document.getElementById(\"copy-link-btn\")\r\n          if (btnCopySct != null) { \r\n               btnCopySct.onclick = () => {\r\n                    createLink();\r\n                    handleCopyClick()\r\n               }; \r\n          };\r\n\r\n          let btnCopyLink = document.getElementById(\"btn-copy-link\")\r\n          if (btnCopyLink != null) { \r\n               btnCopyLink.onclick = () => {\r\n                    createLink();\r\n                    copyLink();\r\n               }; \r\n          };\r\n\r\n          async function onBookmarkCaptureClicked() {\r\n\r\n               let capturedViewname = (document.getElementById(\"viewname\") as HTMLInputElement);\r\n               if (capturedViewname) {\r\n                    let viewname = capturedViewname.value\r\n                    // viewName.addClass(INVALID_FIELD);\r\n                    if ((viewname == \"\") || (viewname == \"Example: December 2019 Sales Profit\")) {\r\n                         viewname = \"bookmark_\" + bookmarkCounter;\r\n                    }\r\n               //   viewName.removeClass(INVALID_FIELD);\r\n          \r\n                    // Capture the report's current state with personalized visuals\r\n                    const capturedBookmark = await report1.bookmarksManager.capture({ personalizeVisuals: true });\r\n          \r\n                    // Build bookmark element\r\n                    let bookmark = {\r\n                         name: \"bookmark_\" + bookmarkCounter,\r\n                         displayName: viewname,\r\n                         state: capturedBookmark.state\r\n                    }\r\n                    bookmarkCounter++;\r\n          \r\n                    // Add the new bookmark to the HTML list\r\n                    let labelElement = document.createElement(\"label\");\r\n                    labelElement.setAttribute(\"class\", \"showcase-checkbox-container\");\r\n                    labelElement.setAttribute(\"role\", \"menuitem\");\r\n                    labelElement.setAttribute(\"id\", bookmark.name + \"_Label\")\r\n\r\n                    let btnElement = document.createElement(\"button\")\r\n                    btnElement.setAttribute(\"id\", bookmark.name)\r\n                    btnElement.setAttribute(\"class\", \"saved-view-entry\");\r\n                    if (bookmark.state){\r\n                         btnElement.setAttribute(\"state\", bookmark.state)\r\n                    }\r\n                    btnElement.onclick = () => {onBookmarkClicked(btnElement);};\r\n                    let TitleElement = document.createTextNode(bookmark.displayName);\r\n                    btnElement.appendChild(TitleElement);\r\n                    \r\n                    labelElement.appendChild(btnElement)\r\n\r\n                    let btnDelete = document.createElement(\"button\")\r\n                    btnDelete.setAttribute(\"id\", bookmark.name + \"_Delete\")\r\n                    btnDelete.setAttribute(\"class\", \"delete-entry-btn\");\r\n                    // if (bookmark.state){\r\n                    //      btnDelete.setAttribute(\"state\", bookmark.state)\r\n                    // }\r\n                    btnDelete.onclick = () => {\r\n                         let fullElement = document.getElementById(btnDelete.id.replace(\"Delete\", \"Label\"));\r\n                         fullElement?.remove()\r\n                    };\r\n                    btnDelete.appendChild(document.createTextNode(\"X\"))\r\n                    labelElement.appendChild(btnDelete)\r\n               \r\n                    let spanElement = document.createElement(\"span\");\r\n                    spanElement.setAttribute(\"class\", \"showcase-checkmark\");\r\n                    labelElement.appendChild(spanElement);\r\n\r\n                    if (bookmarksList != null){\r\n                         bookmarksList.append(labelElement);\r\n                    }\r\n                    console.log(bookmark)\r\n\r\n                    bookmarks = await report1.bookmarksManager.getBookmarks();\r\n                    if (captureDropdown != null) {\r\n                         captureDropdown.style.display = \"none\";\r\n                    }\r\n                    if (bookmarksList != null) {\r\n                         bookmarksList.style.display = \"block\";\r\n                    }\r\n\r\n                    let modal = document.getElementById(\"captureModal\");\r\n                    if (modal) { modal.style.display = \"none\" }\r\n                    \r\n                    onBookmarkClicked(btnElement)\r\n               }\r\n                    \r\n          }\r\n\r\n          let btnSaveView = document.getElementById(\"btn-save2-my-views\")\r\n          if (btnSaveView != null) { btnSaveView.onclick = () => {onBookmarkCaptureClicked();}; };\r\n          \r\n     }\r\n     \r\n     async setLayoutDropdowns(report1: Report) {\r\n          \r\n          const pages = await report1.getPages();\r\n\r\n          \r\n          let visualsDropdown = document.getElementById(\"visuals-list\")\r\n\r\n          let layoutsDropdown = document.getElementById(\"layouts-list\")\r\n\r\n          // Retrieve the active page.\r\n          let page = pages.filter(function (page) {\r\n              return page.isActive;\r\n          })[0];\r\n\r\n          // console.log(\"CURRENT PAGE\")\r\n          // console.log(pages.filter(function (page) {\r\n          //          return page.isActive;\r\n          //      })[0]);\r\n          // console.log(\"PAGES\");\r\n          // console.log(pages);\r\n\r\n          // let page = pages[0]\r\n          const visuals = await page.getVisuals();\r\n          \r\n               // Retrieve the target visual.\r\n          let charts = visuals.filter(function (visual) {\r\n          //     return visual.type == \"scatterChart\";\r\n          return ((visual.type != \"textbox\") && (visual.type != \"slicer\") && (visual.type != \"actionButton\")\r\n               && (visual.type != \"basicShape\") && (visual.type != \"shape\") && (visual.type != \"card\") \r\n               && (visual.type.substring(0,12) != \"ChicletSlicer\".substring(0,12)) \r\n               && (visual.type.substring(0,9) != \"FlowVisual\".substring(0,9)) \r\n               && (visual.title !== undefined) );\r\n          });\r\n\r\n          let reportVisuals = charts.map(function (visual) {\r\n               return {\r\n               name: visual.name,\r\n               // title: page.displayName + \" - \" + visual.title,\r\n               title: visual.title,\r\n               checked: true,\r\n               page: page.name\r\n               };\r\n          });\r\n\r\n          // for (let i=1; i<pages.length; i++) {\r\n          //      page = pages[i]\r\n          \r\n          //      const visuals = await page.getVisuals();\r\n          \r\n          //      // Retrieve the target visual.\r\n          //      let charts = visuals.filter(function (visual) {\r\n          //           return ((visual.type != \"textbox\") && (visual.type != \"slicer\") && (visual.type != \"actionButton\")\r\n          //                && (visual.type != \"basicShape\") && (visual.type != \"shape\") && (visual.type != \"card\") \r\n          //                && (visual.type.substring(0,12) != \"ChicletSlicer\".substring(0,12)) \r\n          //                && (visual.type.substring(0,9) != \"FlowVisual\".substring(0,9)) \r\n          //                && (visual.title !== undefined) \r\n          //           );\r\n          //      });\r\n\r\n          //      let reportVisuals_temp = charts.map(function (visual) {\r\n          //           return {\r\n          //           name: visual.name,\r\n          //           title: page.displayName + \" - \" + visual.title,\r\n          //           checked: true,\r\n          //           page: page.name\r\n          //           };\r\n          //      });\r\n               \r\n          //      reportVisuals = reportVisuals.concat(reportVisuals_temp)\r\n               \r\n\r\n          // }\r\n          \r\n          console.log(\"REPORT VISUALS\")\r\n          console.log(reportVisuals)\r\n          \r\n          //    await createVisualsArray(reportVisuals);\r\n          // Remove all visuals without titles (i.e cards)\r\n          let layoutVisuals = reportVisuals.filter(function (visual) {\r\n               return visual.title !== undefined;\r\n          });\r\n     \r\n          // Clear visualDropdown div\r\n          if (visualsDropdown != null) {\r\n               visualsDropdown.style.display = \"none\"\r\n               visualsDropdown.innerHTML = \"\";\r\n          }\r\n\r\n          let reportLayouts = [1, 2, 3].map(function (N) {\r\n               return {\r\n                   name: N + \" Columns\",\r\n                   Ncols: N,\r\n                   checked: false\r\n               };\r\n          });\r\n\r\n          reportLayouts[2].checked = true\r\n\r\n          let onCheckboxClicked = (checkbox: HTMLInputElement) => {\r\n               let visual = reportVisuals.filter(function (visual) { return  (visual.name === checkbox.value); })[0]\r\n               // let visual2 = jQuery.grep(layoutVisuals, function (visual) { return visual.name === checkbox.value; })[0];\r\n               if (visual.checked === true){\r\n                    visual.checked = false;\r\n               } else {\r\n                    visual.checked = true;\r\n               }\r\n               let Ncols = 1;\r\n               for (let i=0; i<reportLayouts.length; i++){\r\n                    if (reportLayouts[i].checked === true) {Ncols = reportLayouts[i].Ncols;}\r\n               }\r\n               this.renderVisuals(report1, reportVisuals, Ncols);\r\n          };\r\n\r\n          // Build checkbox html list and insert the html code to visualDropdown div\r\n          layoutVisuals.forEach(function (visual) {\r\n               if (visualsDropdown != null) {\r\n                    let labelElement = document.createElement(\"label\");\r\n                    labelElement.setAttribute(\"class\", \"checkbox-container checked\");\r\n                    labelElement.setAttribute(\"for\", \"visual_\" + visual.name);\r\n                    labelElement.setAttribute(\"role\", \"menuitem\");\r\n\r\n                    let inputElement = document.createElement(\"input\");\r\n                    inputElement.setAttribute(\"type\", \"checkbox\");\r\n                    inputElement.setAttribute(\"id\", \"visual_\" + visual.name);\r\n                    inputElement.setAttribute(\"value\", visual.name);\r\n                    // inputElement.setAttribute(\"onclick\", \"() => {onCheckboxClicked(report1, , this);}\");\r\n                    inputElement.onclick = () => {onCheckboxClicked(inputElement);};\r\n                    inputElement.setAttribute(\"checked\", \"true\");\r\n                    labelElement.append(inputElement);\r\n                    \r\n                    let spanElement = document.createElement(\"span\");\r\n                    spanElement.setAttribute(\"class\", \"checkbox-checkmark\");\r\n                    labelElement.append(spanElement);\r\n\r\n                    let secondSpanElement = document.createElement(\"span\");\r\n                    secondSpanElement.setAttribute(\"class\", \"checkbox-title text-truncate\");\r\n                    let checkboxTitleElement = document.createTextNode(visual.title);\r\n                    secondSpanElement.append(checkboxTitleElement);\r\n                    labelElement.append(secondSpanElement);\r\n\r\n                    visualsDropdown.append(labelElement);\r\n               }\r\n          });\r\n\r\n\r\n          let onLayoutClicked = (Ncols: number) => {\r\n               reportLayouts.forEach(function (layout) {\r\n                    if (layout.Ncols != Ncols) {\r\n                         layout.checked = false;\r\n                    } else {\r\n                         layout.checked = true;\r\n                    }\r\n               });\r\n               if (layoutsDropdown != null) {\r\n                    layoutsDropdown.style.display = \"none\"\r\n                    // layoutsDropdown.innerHTML = \"\";\r\n               }\r\n               this.renderVisuals(report1, reportVisuals, Ncols);\r\n          };\r\n\r\n          // Build checkbox html list and insert the html code to visualDropdown div\r\n          reportLayouts.forEach(function (layout) {\r\n               if (layoutsDropdown != null) {\r\n                    \r\n                    let btnLayout = document.getElementById(\"btn-\" + layout.Ncols + \"-col\")\r\n                    if (btnLayout != null){\r\n                         btnLayout.onclick = () => {onLayoutClicked(layout.Ncols);};\r\n                    }\r\n               }\r\n          });\r\n\r\n     \r\n          // Store the id of the first visual in state\r\n          // firstVisualId = $(\"input:checkbox\")[0].id;\r\n     \r\n          // Render all visuals\r\n          // await renderVisuals();\r\n\r\n          // Implement phase embedding to first load the report, arrange the visuals and then render\r\n          report1.render();\r\n\r\n          // Phase-embedding\r\n          // Hide the loader\r\n          //    document.getElementById(\r\n          //    $(\"#overlay\").hide();\r\n          //    $(\"#main-div\").children().show();\r\n          console.log(\"Report render successfully\");\r\n     }\r\n\r\n     async renderVisuals2(report1: Report, reportVisuals: {name:string, title:string, checked:boolean, page:string}[], Ncols: number) {\r\n          \r\n          try {\r\n               // console.log(\"Slicers state\");\r\n               // Page layout: two visible visuals in fixed position.\r\n\r\n               // const pageHeight = 1000;\r\n               const pageWidth = 2000;\r\n               const Lwidth = (pageWidth*0.95)/Ncols;\r\n               const sideTab = (pageWidth*0.05)/Ncols;\r\n               // const N_Rows = Math.ceil(charts.length/Ncols)\r\n               const N_Rows = Math.ceil(reportVisuals.length/Ncols)\r\n               \r\n               // const Lheight = (pageHeight*0.9)/N_Rows\r\n               // const topTab = (pageHeight*0.1)/N_Rows\r\n               \r\n               const Lheight = (Lwidth*0.5)\r\n               const topTab = (sideTab*0.5)\r\n               const pageHeight = topTab*0 + (topTab + Lheight)*N_Rows;\r\n\r\n               let reportContainer = document.getElementById(\"reportContainer\")\r\n               if (reportContainer != null ){\r\n                    reportContainer.style.height = \"\"+ pageHeight*(90/1000) + \"%\";\r\n               }\r\n               // Define default visual layout: visible in 400x300.\r\n               let defaultLayout = {\r\n                    width: 400,\r\n                    height: 250,\r\n                    displayState: {\r\n                    mode: models.VisualContainerDisplayMode.Hidden\r\n                    }\r\n               };\r\n               // Define page size as custom size: 1000x580.\r\n               let pageSize = {\r\n                    type: models.PageSizeType.Custom,\r\n                    width: pageWidth,\r\n                    height: pageHeight\r\n               };\r\n               \r\n               let pageLayout = {\r\n                    defaultLayout: defaultLayout,\r\n                    visualsLayout: {\r\n                         \r\n                    }\r\n               };\r\n               \r\n               let j = 0;\r\n               // for (var i=0; i<charts.length; i++) {\r\n               for (var i=0; i<reportVisuals.length; i++) {\r\n                    //if ((visuals[i].type != \"textbox\") && (visuals[i].type != \"slicer\") && (visuals[i].type != \"actionButton\")\r\n                    //      && (visuals[i].type != \"basicShape\") && (visuals[i].type != \"shape\") && (visuals[i].type != \"card\")) {\r\n                    if (reportVisuals[i].checked===true) {\r\n                         pageLayout.visualsLayout[reportVisuals[i].name] = {\r\n                              x: (j%Ncols)*Lwidth + (j%Ncols + 1)*sideTab,\r\n                              y: Math.floor(j/Ncols)*Lheight + Math.ceil((j+1)/Ncols)*topTab,\r\n                              height: Lheight,\r\n                              width: Lwidth,\r\n                              displayState: {\r\n                                   mode: models.VisualContainerDisplayMode.Visible\r\n                              }\r\n                         }\r\n                         j++;\r\n                    }\r\n\r\n               }\r\n               console.log(pageLayout)\r\n\r\n               var reportSection = this.props.page;\r\n               // var reportSection = ;\r\n               let settings = {\r\n                    layoutType: models.LayoutType.Custom,\r\n                    customLayout: {\r\n                         pageSize: pageSize,\r\n                         displayOption: models.DisplayOption.FitToPage,\r\n                         // displayState: {\r\n\r\n                         //      // Change the selected visuals display mode to visible\r\n                         //      mode: models.VisualContainerDisplayMode.Visible\r\n                         // },\r\n                         pagesLayout: {\r\n                              // \"ReportSection\": pageLayout\r\n                              [reportSection]: pageLayout\r\n                         }\r\n                    },\r\n                    panes: {\r\n                         filters: {\r\n                              visible: true\r\n                         },\r\n                         pageNavigation: {\r\n                              visible: false\r\n                         }\r\n                    }\r\n               }\r\n               \r\n               // Update the settings by passing in the new settings you have configured.\r\n               \r\n               await report1.updateSettings(settings);\r\n               console.log(\"Custom layout applied, to remove custom layout, reload the report using 'Reload' API.\");\r\n          }\r\n          catch (error) {\r\n               console.log(error);\r\n          }\r\n          \r\n     }\r\n     \r\n     async renderVisuals(report1: Report, reportVisuals: {name:string, title:string, checked:boolean, page:string}[], Ncols: number) {\r\n          \r\n          try {\r\n               // console.log(\"Slicers state\");\r\n               // Page layout: two visible visuals in fixed position.\r\n\r\n               // const pageHeight = 1000;\r\n               const pageWidth = 2000;\r\n               const Lwidth = (pageWidth*0.8)/Ncols;\r\n               const sideTab = (pageWidth*0.2)/Ncols;\r\n               // const N_Rows = Math.ceil(charts.length/Ncols)\r\n               const N_Rows = Math.ceil(reportVisuals.length/Ncols)\r\n               \r\n               // const Lheight = (pageHeight*0.9)/N_Rows\r\n               // const topTab = (pageHeight*0.1)/N_Rows\r\n               \r\n               const Lheight = (Lwidth*0.5)\r\n               const topTab = (sideTab*0.5)\r\n               const pageHeight = topTab*0 + (topTab + Lheight)*N_Rows;\r\n               // const pageHeight = pageWidth/2;\r\n\r\n               let reportContainer = document.getElementById(\"reportContainer\")\r\n               if (reportContainer != null ){\r\n                    reportContainer.style.height = \"\"+ (topTab*0 + (topTab + Lheight)*N_Rows)*(90/1000) + \"%\";\r\n               }\r\n               // Define default visual layout: visible in 400x300.\r\n               let defaultLayout = {\r\n                    width: 400,\r\n                    height: 250,\r\n                    displayState: {\r\n                    mode: models.VisualContainerDisplayMode.Hidden\r\n                    }\r\n               };\r\n               // Define page size as custom size: 1000x580.\r\n               let pageSize = {\r\n                    type: models.PageSizeType.Custom,\r\n                    width: pageWidth,\r\n                    height: pageHeight\r\n               };\r\n               \r\n               // let pageLayout = {\r\n               //      defaultLayout: defaultLayout,\r\n               //      visualsLayout: {\r\n                         \r\n               //      }\r\n               // };\r\n\r\n               let settings = {\r\n                    layoutType: models.LayoutType.Custom,\r\n                    customLayout: {\r\n                         pageSize: pageSize,\r\n                         displayOption: models.DisplayOption.FitToPage,\r\n                         // displayState: {\r\n\r\n                         //      // Change the selected visuals display mode to visible\r\n                         //      mode: models.VisualContainerDisplayMode.Visible\r\n                         // },\r\n                         pagesLayout: {\r\n                              // \"ReportSection\": pageLayout\r\n                              // [reportVisuals[i].page]: {\r\n                              //      defaultLayout: defaultLayout,\r\n                              //      visualsLayout: {\r\n                              //           [reportVisuals[i].name]: {\r\n                              //                x: (j%Ncols)*Lwidth + (j%Ncols + 1)*sideTab,\r\n                              //                y: Math.floor(j/Ncols)*Lheight + Math.ceil((j+1)/Ncols)*topTab,\r\n                              //                height: Lheight,\r\n                              //                width: Lwidth,\r\n                              //                displayState: {\r\n                              //                     mode: models.VisualContainerDisplayMode.Visible\r\n                              //                }\r\n                              //           }\r\n                         \r\n                              //      }\r\n                              // }\r\n                         }\r\n                    },\r\n                    panes: {\r\n                         filters: {\r\n                              visible: true\r\n                         },\r\n                         pageNavigation: {\r\n                              visible: false\r\n                         }\r\n                    }\r\n               }\r\n               \r\n               \r\n               let j = 0;\r\n               // for (var i=0; i<charts.length; i++) {\r\n               for (var i=0; i<reportVisuals.length; i++) {\r\n                    //if ((visuals[i].type != \"textbox\") && (visuals[i].type != \"slicer\") && (visuals[i].type != \"actionButton\")\r\n                    //      && (visuals[i].type != \"basicShape\") && (visuals[i].type != \"shape\") && (visuals[i].type != \"card\")) {\r\n                    if (reportVisuals[i].checked===true) {\r\n                         if (settings.customLayout.pagesLayout.hasOwnProperty(reportVisuals[i].page) === false){\r\n                              settings.customLayout.pagesLayout[reportVisuals[i].page] = {\r\n                                   defaultLayout: defaultLayout,\r\n                                   visualsLayout: {\r\n                                        [reportVisuals[i].name]: {\r\n                                             x: (j%Ncols)*Lwidth + (j%Ncols + 1)*sideTab,\r\n                                             y: Math.floor(j/Ncols)*Lheight + (Math.ceil((j+1)/Ncols)-1)*topTab,\r\n                                             height: Lheight,\r\n                                             width: Lwidth,\r\n                                             displayState: {\r\n                                                  mode: models.VisualContainerDisplayMode.Visible\r\n                                             }\r\n                                        }\r\n                         \r\n                                   }\r\n                              }\r\n                         } else {\r\n                              \r\n                              settings.customLayout.pagesLayout[reportVisuals[i].page].visualsLayout[reportVisuals[i].name] = {\r\n                                   x: (j%Ncols)*Lwidth + (j%Ncols + 1)*sideTab,\r\n                                   y: Math.floor(j/Ncols)*Lheight + (Math.ceil((j+1)/Ncols)-1)*topTab,\r\n                                   height: Lheight,\r\n                                   width: Lwidth,\r\n                                   displayState: {\r\n                                        mode: models.VisualContainerDisplayMode.Visible\r\n                                   }\r\n                              }\r\n                         }\r\n                         \r\n                         j++;\r\n                    }\r\n\r\n               }\r\n               console.log(settings)\r\n\r\n               var reportSection = this.props.page;\r\n               // var reportSection = ;\r\n               \r\n               // Update the settings by passing in the new settings you have configured.\r\n               \r\n               await report1.updateSettings(settings);\r\n               console.log(\"Custom layout applied, to remove custom layout, reload the report using 'Reload' API.\");\r\n          }\r\n          catch (error) {\r\n               console.log(error);\r\n          }\r\n          \r\n     }\r\n\r\n     async getLayout(report1: Report){\r\n          // Retrieve the page collection and check if the first page has a MobilePortrait layout.\r\n          try {\r\n               const pages = await report1.getPages();\r\n               const hasLayout = await pages[0].hasLayout(models.LayoutType.MobilePortrait);\r\n          \r\n               let hasLayoutText = hasLayout ? \"has\" : \"doesn't have\";\r\n               console.log(\"Page \\\"\" + pages[0].name + \"\\\" \" + hasLayoutText + \" mobile portrait layout.\");\r\n          }\r\n          catch (errors) {\r\n               console.log(errors);\r\n          }\r\n     }\r\n\r\n     async setLayout(report1: Report) {\r\n          // Define default visual layout: visible in 400x300.\r\n          let defaultLayout = {\r\n               width: 400,\r\n               height: 250,\r\n               displayState: {\r\n               mode: models.VisualContainerDisplayMode.Hidden\r\n               }\r\n          };\r\n          const pageHeight = 1000;\r\n          const pageWidth = 2000;\r\n          // Define page size as custom size: 1000x580.\r\n          let pageSize = {\r\n               type: models.PageSizeType.Custom,\r\n               width: pageWidth,\r\n               height: pageHeight\r\n          };\r\n          try {\r\n               const pages = await report1.getPages();\r\n           \r\n               // // Retrieve the active page.\r\n               let pageWithSlicer = pages.filter(function (page) {\r\n                   return page.isActive;\r\n               })[0];\r\n           \r\n               const visuals = await pageWithSlicer.getVisuals();\r\n           \r\n               // Retrieve the target visual.\r\n               let charts = visuals.filter(function (visual) {\r\n               //     return visual.type == \"scatterChart\";\r\n                   return ((visual.type != \"textbox\") && (visual.type != \"slicer\") && (visual.type != \"actionButton\")\r\n                    && (visual.type != \"basicShape\") && (visual.type != \"shape\") && (visual.type != \"card\") \r\n                    && (visual.type.substring(0,12) != \"ChicletSlicer\".substring(0,12)) \r\n                    && (visual.type.substring(0,9) != \"FlowVisual\".substring(0,9)) );\r\n               });\r\n               \r\n               // console.log(\"Slicers state\");\r\n               // Page layout: two visible visuals in fixed position.\r\n               \r\n               let pageLayout = {\r\n                    defaultLayout: defaultLayout,\r\n                    visualsLayout: {\r\n                         // [visuals[3].name]: {\r\n                         // // '4138df0f38230daa6720': {\r\n                         //      x: 50,\r\n                         //      y: 100,\r\n                         //      height: 100,\r\n                         //      width: 200,\r\n                         //      displayState: {\r\n                         //           mode: models.VisualContainerDisplayMode.Visible\r\n                         //      }\r\n                         // },\r\n                         // [visuals[4].name]: {\r\n                         // // '741416d34971317932ec': {\r\n                         //      x: 540,\r\n                         //      y: 100,\r\n                         //      // height: 500,\r\n                         //      // width: 500,\r\n                         //      displayState: {\r\n                         //          mode: models.VisualContainerDisplayMode.Visible\r\n                         //      }\r\n                         // },\r\n                    }\r\n               };\r\n               \r\n               const Lwidth = (pageWidth*0.8)/3;\r\n               const sideTab = (pageWidth*0.2)/3;\r\n               const N_Rows = Math.ceil(charts.length/3)\r\n               const Lheight = (pageHeight*0.9)/N_Rows\r\n               const topTab = (pageHeight*0.1)/N_Rows\r\n               let j = 0;\r\n               for (var i=0; i<charts.length; i++) {\r\n                    // if ((visuals[i].type != \"textbox\") && (visuals[i].type != \"slicer\") && (visuals[i].type != \"actionButton\")\r\n                    //      && (visuals[i].type != \"basicShape\") && (visuals[i].type != \"shape\") && (visuals[i].type != \"card\")) {\r\n                         \r\n                         pageLayout.visualsLayout[charts[i].name] = {\r\n                              x: (j%3)*Lwidth + (j%3 + 1)*sideTab,\r\n                              y: Math.floor(j/3)*Lheight + Math.ceil((j+1)/3)*topTab,\r\n                              height: Lheight,\r\n                              width: Lwidth,\r\n                              displayState: {\r\n                                   mode: models.VisualContainerDisplayMode.Visible\r\n                              }\r\n                         }\r\n                         j++;\r\n                    // }\r\n\r\n               }\r\n               console.log(pageLayout)\r\n\r\n               var reportSection = this.props.page;\r\n               let settings = {\r\n                    layoutType: models.LayoutType.Custom,\r\n                    customLayout: {\r\n                         pageSize: pageSize,\r\n                         displayOption: models.DisplayOption.FitToPage,\r\n                         // displayState: {\r\n\r\n                         //      // Change the selected visuals display mode to visible\r\n                         //      mode: models.VisualContainerDisplayMode.Visible\r\n                         // },\r\n                         pagesLayout: {\r\n                              // \"ReportSection\": pageLayout\r\n                              [reportSection]: pageLayout\r\n                         }\r\n                    },\r\n                    panes: {\r\n                         filters: {\r\n                              visible: true\r\n                         },\r\n                         pageNavigation: {\r\n                              visible: false\r\n                         }\r\n                    }\r\n               }\r\n               \r\n               // Update the settings by passing in the new settings you have configured.\r\n               \r\n               await report1.updateSettings(settings);\r\n               console.log(\"Custom layout applied, to remove custom layout, reload the report using 'Reload' API.\");\r\n          }\r\n          catch (error) {\r\n               console.log(error);\r\n          }\r\n          \r\n     }\r\n\r\n     async goBackToReport(report1: Report) {\r\n          // Define default visual layout: visible in 400x300.\r\n          \r\n          try {\r\n\r\n               var reportSection = this.props.page;\r\n               let settings = {\r\n                    layoutType: models.LayoutType.MobileLandscape,\r\n                    \r\n                    panes: {\r\n                         filters: {\r\n                              visible: true\r\n                         },\r\n                         pageNavigation: {\r\n                              visible: false\r\n                         }\r\n                    }\r\n               }\r\n               \r\n               // Update the settings by passing in the new settings you have configured.\r\n               \r\n               await report1.updateSettings(settings);\r\n               console.log(\"Custom layout applied, to remove custom layout, reload the report using 'Reload' API.\");\r\n          }\r\n          catch (error) {\r\n               console.log(error);\r\n          }\r\n          \r\n     }\r\n\r\n     getFilters(report1: Report){\r\n          // Get the filters applied to the report1.\r\n          try {\r\n               const filters = report1.getFilters();\r\n               console.log(filters);\r\n          }\r\n          catch (errors) {\r\n               console.log(errors);\r\n          }\r\n \r\n     }\r\n\r\n     async getSlicers(report1: Report){\r\n          try {\r\n               const pages = await report1.getPages();\r\n           \r\n               // Retrieve the active page.\r\n               let pageWithSlicer = pages.filter(function (page) {\r\n                   return page.isActive;\r\n               })[0];\r\n           \r\n               const visuals = await pageWithSlicer.getVisuals();\r\n           \r\n               // Retrieve the target visual.\r\n               let slicers = visuals.filter(function (visual) {\r\n                   return visual.type === \"slicer\";\r\n               });\r\n               \r\n               // // Get the slicer state\r\n               // const state = await slicers.getSlicerState();\r\n               // console.log(state);\r\n\r\n               // for (const slicer in slicers){\r\n               //      // Get the slicer state\r\n               //      const state = await slicer.getSlicerState();\r\n               //      console.log(state);\r\n               // }\r\n               console.log(\"Slicers state\");\r\n               for (var i = 0; i < slicers.length; i++){\r\n                    // Get the slicer state\r\n                    const name = await slicers[i].name ;\r\n                    const slType = await slicers[i].type ;\r\n                    // console.log(name);\r\n                    const state = await slicers[i].getSlicerState();\r\n                    console.log([name, slType, state]);\r\n               }\r\n\r\n               // for (var i = 0; i < visuals.length; i++){\r\n               //      // Get the slicer state\r\n               //      const name = await visuals[i].title ;\r\n               //      const slid = await visuals[i].name ;\r\n               //      const slType = await visuals[i].type ;\r\n               //      // console.log(name);\r\n               //      console.log([name, slType, slid]);\r\n               // }\r\n           }\r\n           catch (errors) {\r\n               console.log(\"failed getSlicer\");\r\n               console.log(errors);\r\n           }\r\n           \r\n     }\r\n\r\n     async setMarketUnit(report1: Report, MarketUnit: string){\r\n          \r\n          // Retrieve the page collection and get the visuals for the active page.\r\n          try {\r\n               const pages = await report.getPages();\r\n               \r\n               // Retrieve the active page.\r\n               let page = pages.filter(function (page) {\r\n                    return page.isActive;\r\n               })[0];\r\n               \r\n               const visuals = await page.getVisuals();\r\n               \r\n               // Retrieve the target visual.\r\n               let slicers = visuals.filter(function (visual) {\r\n                    return (visual.type === \"slicer\"  \r\n                         // && visual.name === \"VisualContainer7\"\r\n                    );\r\n               });\r\n\r\n               let pMarketTarget = {table: 'Conn_MU', column: 'Market'} as models.SlicerTarget;\r\n               \r\n               let iMarketTarget = {table: 'Conn_market unit', column: 'Market'} as models.SlicerTarget;\r\n\r\n               // let slcMarket = slicers[0] \r\n               let slcMarket = null as unknown as VisualDescriptor\r\n\r\n               for (let i=0; i<slicers.length; i++) {\r\n                    let slicer = slicers[i]\r\n                    let state = await slicer.getSlicerState()\r\n                    if (state.targets) {\r\n                         let target = state.targets[0]\r\n                         if (target[\"column\"]){\r\n                              // console.log(target[\"column\"] + \" === \" + pMarketTarget[\"column\"] + \" or \" + \r\n                              //      iMarketTarget[\"column\"])\r\n                              // return (((target.table === pMarketTarget.table )\r\n                              //      && (target[\"column\"] === pMarketTarget[\"column\"]) ) \r\n                              //      || ((target.table === iMarketTarget.table )\r\n                              //      && (target[\"column\"] === iMarketTarget[\"column\"]) ))\r\n                              \r\n                              if ((target[\"column\"] == pMarketTarget[\"column\"]) \r\n                                   || (target[\"column\"] == iMarketTarget[\"column\"]) )\r\n                              {\r\n                                   console.log(target[\"column\"] + \" === \" + pMarketTarget[\"column\"] + \" or \" + \r\n                                        iMarketTarget[\"column\"])\r\n                                   \r\n                                   slcMarket = slicer\r\n                              }\r\n                         }\r\n                    }\r\n               };\r\n               // );\r\n\r\n               if (slcMarket == (null as unknown as VisualDescriptor)){\r\n                    console.log(\"MarketUnit Slicer not found\")\r\n               } else {\r\n                    let state = await slcMarket.getSlicerState()\r\n                    let target = pMarketTarget\r\n                    if (state.targets){ target = state.targets[0] }\r\n\r\n                    const slicerFilter = {\r\n                         $schema: \"http://powerbi.com/product/schema#basic\",\r\n                         target: target,\r\n                         operator: \"In\",\r\n                         values: [MarketUnit],\r\n                         filterType: models.FilterType.Basic\r\n                    } as models.ISlicerFilter;\r\n\r\n                    state.filters[0] = slicerFilter\r\n                    console.log(state)\r\n                    // Set the slicer state which contains the slicer filters.\r\n                    await slcMarket.setSlicerState(state);\r\n                    // await slicer.setFilters(slicerFilter)\r\n                    console.log(\"slicer was set.\");\r\n\r\n                    // slcMarket.\r\n               }\r\n\r\n          } catch (errors) {\r\n               console.log(errors);\r\n          }   \r\n     }\r\n\r\n     async writeAppliedFilters(report1: Report){\r\n          \r\n          // Only MarketUnit for now\r\n          try {\r\n               const pages = await report.getPages();\r\n               \r\n               // Retrieve the active page.\r\n               let page = pages.filter(function (page) {\r\n                    return page.isActive;\r\n               })[0];\r\n               \r\n               const visuals = await page.getVisuals();\r\n               \r\n               // Retrieve the target visual.\r\n               let slicers = visuals.filter(function (visual) {\r\n                    return (visual.type === \"slicer\"  \r\n                         // && visual.name === \"VisualContainer7\"\r\n                    );\r\n               });\r\n\r\n               const pMarketTarget = {table: 'Conn_MU', column: 'Market'} as models.SlicerTarget;\r\n               \r\n               const iMarketTarget = {table: 'Conn_market unit', column: 'Market'} as models.SlicerTarget;\r\n\r\n               const iServices = {table: 'Conn_service groups', column: 'Service Dimension'} as models.SlicerTarget;\r\n               \r\n               const pServices = {table: 'Connector_SG', column: 'SG'} as models.SlicerTarget;\r\n               \r\n               const p2Services = {table: 'Connector_SG', column: 'SERVICE DIMENSION'} as models.SlicerTarget;\r\n\r\n               // let slcMarket = slicers[0] \r\n               let slcMarket = null as unknown as VisualDescriptor;\r\n               let slcServices = null as unknown as VisualDescriptor;\r\n\r\n               for (let i=0; i<slicers.length; i++) {\r\n                    let slicer = slicers[i]\r\n                    let state = await slicer.getSlicerState()\r\n                    if (state.targets) {\r\n                         let target = state.targets[0]\r\n                         if (target[\"column\"]){\r\n                              // console.log(target[\"column\"] + \" === \" + pMarketTarget[\"column\"] + \" or \" + \r\n                              //      iMarketTarget[\"column\"])\r\n                              // return (((target.table === pMarketTarget.table )\r\n                              //      && (target[\"column\"] === pMarketTarget[\"column\"]) ) \r\n                              //      || ((target.table === iMarketTarget.table )\r\n                              //      && (target[\"column\"] === iMarketTarget[\"column\"]) ))\r\n                              \r\n                              if ((target[\"column\"] == pMarketTarget[\"column\"]) \r\n                                   || (target[\"column\"] == iMarketTarget[\"column\"]) )\r\n                              {\r\n                                   console.log(target[\"column\"] + \" === \" + pMarketTarget[\"column\"] + \" or \" + \r\n                                        iMarketTarget[\"column\"])\r\n                                   \r\n                                   slcMarket = slicer\r\n                              }\r\n                              if ((target[\"column\"] == pServices[\"column\"]) \r\n                                   || (target[\"column\"] == iServices[\"column\"]) )\r\n                              {\r\n                                   console.log(target[\"column\"] + \" === \" + pServices[\"column\"] + \" or \" + \r\n                                        iServices[\"column\"])\r\n                                   \r\n                                   slcServices = slicer\r\n                              }\r\n                         }\r\n                    }\r\n               };\r\n               // );\r\n\r\n               if (slcMarket == (null as unknown as VisualDescriptor)){\r\n                    console.log(\"MarketUnit Slicer not found\")\r\n                    if (slcMarket != (null as unknown as VisualDescriptor)){\r\n                         let oldAppliedFilters = this.props.getAppliedFilters();\r\n                         console.log(\"Old one:\")\r\n                         console.log(oldAppliedFilters)\r\n                         let stateService = await slcServices.getSlicerState()\r\n                         this.props.setAppliedFilters([stateService])\r\n                         console.log(\"Applied:\")\r\n                         console.log(stateService)\r\n                    }\r\n               } else {\r\n                    let oldAppliedFilters = this.props.getAppliedFilters();\r\n                    console.log(\"Old one:\")\r\n                    console.log(oldAppliedFilters)\r\n\r\n                    let stateMarket = await slcMarket.getSlicerState()\r\n\r\n                    if (slcServices != (null as unknown as VisualDescriptor)){\r\n                         let stateService = await slcServices.getSlicerState()\r\n                         this.props.setAppliedFilters([stateMarket, stateService])\r\n                         console.log(\"Applied:\")\r\n                         console.log([stateMarket, stateService])\r\n                    } else {\r\n                         this.props.setAppliedFilters([stateMarket])\r\n                         console.log(\"Applied:\")\r\n                         console.log(stateMarket)\r\n                    }\r\n\r\n                    console.log(\"Read:\")\r\n                    let appliedFilters = this.props.getAppliedFilters();\r\n                    console.log(appliedFilters)\r\n                    \r\n                    // slcMarket.\r\n               }\r\n\r\n          } catch (errors) {\r\n               console.log(errors);\r\n          }   \r\n     }\r\n\r\n     async setAppliedFilters(report1: Report){\r\n          \r\n          // if possiible, it will apply filters saved in appliedFilters to the current report\r\n          let oldAppliedFilters = this.props.getAppliedFilters()\r\n          if (oldAppliedFilters === null) { \r\n               console.log(\"ERROR:    appliedFilters === null\")\r\n               return; \r\n          }\r\n\r\n          console.log(\"appliedFilters: \")\r\n          console.log(oldAppliedFilters)\r\n\r\n          const pMarketTarget = {table: 'Conn_MU', column: 'Market'} as models.SlicerTarget;\r\n               \r\n          const iMarketTarget = {table: 'Conn_market unit', column: 'Market'} as models.SlicerTarget;\r\n\r\n          const iServices = {table: 'Conn_service groups', column: 'Service Dimension'} as models.SlicerTarget;\r\n          \r\n          const pServices = {table: 'Connector_SG', column: 'SG'} as models.SlicerTarget;\r\n\r\n          const p2Services = {table: 'Connector_SG', column: 'SERVICE DIMENSION'} as models.SlicerTarget;\r\n\r\n\r\n          try {\r\n               \r\n               let stateMarket = null as unknown as models.ISlicerState;\r\n               let stateService = null as unknown as models.ISlicerState;\r\n               \r\n               for (let i=0; i<oldAppliedFilters.length; i++) {\r\n                    let state = oldAppliedFilters[i]\r\n                    if (state.targets) {\r\n                         let target = state.targets[0]\r\n                         if (target[\"column\"]){\r\n                              // console.log(target[\"column\"] + \" === \" + pMarketTarget[\"column\"] + \" or \" + \r\n                              //      iMarketTarget[\"column\"])\r\n                              // return (((target.table === pMarketTarget.table )\r\n                              //      && (target[\"column\"] === pMarketTarget[\"column\"]) ) \r\n                              //      || ((target.table === iMarketTarget.table )\r\n                              //      && (target[\"column\"] === iMarketTarget[\"column\"]) ))\r\n                              \r\n                              if ((target[\"column\"] == pMarketTarget[\"column\"]) \r\n                                   || (target[\"column\"] == iMarketTarget[\"column\"]) )\r\n                              {\r\n                                   console.log(target[\"column\"] + \" === \" + pMarketTarget[\"column\"] + \" or \" + \r\n                                        iMarketTarget[\"column\"])\r\n                                   \r\n                                        stateMarket = state\r\n                              }\r\n\r\n                              if ((target[\"column\"] == pServices[\"column\"]) \r\n                                   // || (target[\"column\"] == iServices[\"column\"]) \r\n                              ){\r\n                                   console.log(target[\"column\"] + \" === \" + pServices[\"column\"] + \" or \" + \r\n                                        iServices[\"column\"])\r\n                                   \r\n                                        stateService = state\r\n                              }\r\n\r\n                              if ((target[\"column\"] == iServices[\"column\"]) )\r\n                              {\r\n                                   console.log(target[\"column\"] + \" === \" + pServices[\"column\"] + \" or \" + \r\n                                        iServices[\"column\"])\r\n                                   \r\n                                        stateService = state\r\n                              }\r\n                         }\r\n                    }\r\n               };\r\n               if ((stateMarket===(null as unknown as models.ISlicerState)) && (stateService===(null as unknown as models.ISlicerState))) {\r\n                    console.log(\"ERROR:    state===(null as unknown as models.ISlicerState)\")\r\n                    return;\r\n               }\r\n\r\n               const pages = await report.getPages();\r\n               \r\n               // Retrieve the active page.\r\n               let page = pages.filter(function (page) {\r\n                    return page.isActive;\r\n               })[0];\r\n               \r\n               const visuals = await page.getVisuals();\r\n               \r\n               // Retrieve the target visual.\r\n               let slicers = visuals.filter(function (visual) {\r\n                    return (visual.type === \"slicer\"  \r\n                         // && visual.name === \"VisualContainer7\"\r\n                    );\r\n               });\r\n\r\n               // let slcMarket = slicers[0] \r\n               let slcMarket = null as unknown as VisualDescriptor\r\n               let slcService = null as unknown as VisualDescriptor\r\n\r\n               for (let i=0; i<slicers.length; i++) {\r\n                    let slicer = slicers[i]\r\n                    let state = await slicer.getSlicerState()\r\n                    if (state.targets) {\r\n                         let target = state.targets[0]\r\n                         if (target[\"column\"]){\r\n                              // console.log(target[\"column\"] + \" === \" + pMarketTarget[\"column\"] + \" or \" + \r\n                              //      iMarketTarget[\"column\"])\r\n                              // return (((target.table === pMarketTarget.table )\r\n                              //      && (target[\"column\"] === pMarketTarget[\"column\"]) ) \r\n                              //      || ((target.table === iMarketTarget.table )\r\n                              //      && (target[\"column\"] === iMarketTarget[\"column\"]) ))\r\n                              \r\n                              if ((target[\"column\"] == pMarketTarget[\"column\"]) \r\n                                   || (target[\"column\"] == iMarketTarget[\"column\"]) )\r\n                              {\r\n                                   console.log(target[\"table\"] + \" vs \" + state.targets[0][\"table\"])\r\n                                   console.log(target[\"column\"] + \" === \" + pMarketTarget[\"column\"] + \" or \" + \r\n                                        iMarketTarget[\"column\"])\r\n                                   \r\n                                   slcMarket = slicer\r\n                              }\r\n                              if ((target[\"column\"] == pServices[\"column\"]) \r\n                                   // || (target[\"column\"] == iServices[\"column\"]) \r\n                              ){\r\n                                   console.log(target[\"table\"] + \" vs \" + state.targets[0][\"table\"])\r\n                                   console.log(target[\"column\"] + \" === \" + pServices[\"column\"] + \" or \" + \r\n                                        iServices[\"column\"])\r\n                                   \r\n                                   slcService = slicer\r\n                              }\r\n                              if ((target[\"column\"] == iServices[\"column\"]) \r\n                              ){\r\n                                   console.log(target[\"table\"] + \" vs \" + state.targets[0][\"table\"])\r\n                                   console.log(target[\"column\"] + \" === \" + pServices[\"column\"] + \" or \" + \r\n                                        iServices[\"column\"])\r\n                                   \r\n                                   slcService = slicer\r\n                              }\r\n                         }\r\n                    }\r\n               };\r\n               // );\r\n\r\n               if ((slcMarket == (null as unknown as VisualDescriptor)) && (slcService == (null as unknown as VisualDescriptor))){\r\n                    console.log(\"state Slicers not found\")\r\n               } else {\r\n\r\n                    let slcStateMarket = await slcMarket.getSlicerState()\r\n                    if (slcStateMarket.targets==null) {\r\n                         console.log(\"ERROR:    slcState.targets==null\")\r\n                         // return;\r\n                    } else { \r\n                         if (slcStateMarket.targets[0][\"table\"]==null){\r\n                              console.log(\"ERROR:    slcState.targets[table]==null\")\r\n                              // return; \r\n                         }\r\n                    }\r\n\r\n                    let slcStateService = await slcService.getSlicerState()\r\n                    if (slcStateService.targets==null) {\r\n                         console.log(\"ERROR:    slcStateService.targets==null\")\r\n                         // return;\r\n                    } else { \r\n                         if (slcStateService.targets[0][\"table\"]==null){\r\n                              console.log(\"ERROR:    slcStateService.targets[table]==null\")\r\n                              // return; \r\n                         }\r\n                    }\r\n                    // console.log(\"typeof(stateMarket.filters[0].target) = \" + typeof(stateMarket.filters[0].target))\r\n                    // if (typeof(stateMarket.filters[0].target)==)\r\n                    let i=0;\r\n                    if (slcStateMarket.targets!=null) {\r\n                         if ((slcMarket !== (null as unknown as VisualDescriptor)) && (slcStateMarket.targets[0][\"table\"]!=null)){\r\n                              if (stateMarket.filters[0]) {\r\n                                   if (stateMarket.filters[0].target[0]==null) {\r\n                                        console.log(\"stateMarket.filters[0].target[0]==null\")\r\n                                        stateMarket.filters[0].target[\"table\"] = slcStateMarket.targets[0][\"table\"];\r\n                                   } else {\r\n                                        while (stateMarket.filters[0].target[i]!=null){\r\n                                        // for (let i=0; i<stateMarket.filters[0].target.length; i++){\r\n                                             console.log(\"stateMarket.filters[0].target[\" + i + \"]!=null\")\r\n                                             stateMarket.filters[0].target[i][\"table\"] = slcStateMarket.targets[0][\"table\"];\r\n                                             i++;\r\n                                        }\r\n                                        console.log(\"length(stateMarket.filters[0].target) = \" + i)\r\n                                   }\r\n                              }\r\n                              console.log(stateMarket)\r\n                              // Set the slicer state which contains the slicer filters.\r\n                              await slcMarket.setSlicerState(stateMarket);\r\n                              // await slicer.setFilters(slicerFilter)\r\n                              console.log(\"Market slicer was set.\");\r\n                         }\r\n                    }\r\n                    i=0\r\n                    if (slcStateService.targets!=null) {\r\n                         if ((slcService !== (null as unknown as VisualDescriptor)) && (slcStateService.targets[0][\"table\"]!=null)){\r\n                              if (stateService.filters[0].target[0]==null) {\r\n                                   console.log(\"stateService.filters[0].target[0]==null\")\r\n                                   // stateService.filters[0].target[\"column\"] = slcStateService.targets[0][\"column\"];\r\n                                   stateService.filters[0].target[\"table\"] = slcStateService.targets[0][\"table\"];\r\n                              } else {\r\n                                   while (stateService.filters[0].target[i]!=null){\r\n                                   // for (let i=0; i<stateService.filters[0].target.length; i++){\r\n                                        console.log(\"stateService.filters[0].target[\" + i + \"]!=null\")\r\n                                        stateService.filters[0].target[i][\"table\"] = slcStateService.targets[0][\"table\"];\r\n                                        // stateService.filters[0].target[i][\"column\"] = slcStateService.targets[0][\"column\"];\r\n                                        i++;\r\n                                   }\r\n                                   console.log(\"length(stateService.filters[0].target) = \" + i)\r\n                              }\r\n                              console.log(stateService)\r\n                              // Set the slicer state which contains the slicer filters.\r\n                              await slcService.setSlicerState(stateService);\r\n                              // await slicer.setFilters(slicerFilter)\r\n                              console.log(\"Service slicer was set.\");\r\n                         }\r\n                    }\r\n                    \r\n               }\r\n\r\n          } catch (errors) {\r\n               console.log(errors);\r\n          }   \r\n     }\r\n\r\n     fullScreen(report1: Report){\r\n          // Displays the report in full screen mode.\r\n          // report.exitFullscreen();\r\n          try{\r\n               report1.fullscreen();\r\n          }\r\n          catch (errors) {\r\n               console.log(errors);\r\n          }\r\n     }\r\n\r\n     setFilters(){\r\n          \r\n     }\r\n    // React function\r\n     componentWillUnmount(): void {\r\n\r\n          // try {\r\n          //      const filters = report.getFilters();\r\n          //      console.log(filters);\r\n          // }\r\n          // catch (errors) {\r\n          //      console.log(errors);\r\n          // }\r\n          powerbi.reset(reportContainer);\r\n     }\r\n\r\n    // Authenticating to get the access token\r\n     authenticate(): void {\r\n\r\n          // this.props.setTargetPath(window.location.href);\r\n\r\n          const thisObj = this;\r\n\r\n          const msalConfig = {\r\n               auth: {\r\n                    clientId: config.clientId,\r\n                    authority: \"https://login.microsoftonline.com/\" + config.tenantId,\r\n               }\r\n          };\r\n\r\n          const loginRequest = {\r\n               scopes: config.scopes\r\n          };\r\n\r\n          const msalInstance: UserAgentApplication = new UserAgentApplication(msalConfig);\r\n\r\n          // let clientOptions: ClientOptions = {\r\n          //      authProvider: ,\r\n          // };\r\n          // const client = Client.initWithMiddleware(clientOptions);\r\n\r\n          const options: ClientOptions = {\r\n               authProvider: new MyAuthenticationProvider(),\r\n          };\r\n          \r\n          const client = Client.initWithMiddleware(options);\r\n          // const client = Client.init();\r\n\r\n          async function updateProfilePicture (): Promise<void> {\r\n               console.log(\"Succesful updateProfilePicture 0/4\")\r\n               // try {\r\n               //      // let response = await client.api(\"/me/photo/$value\").get();\r\n               //      console.log(\"Succesful updateProfilePicture 1/4\")\r\n               //      let response = await client.api(\"/me\").get();\r\n               //      console.log(\"Succesful updateProfilePicture 2/4\")\r\n               //           // Assuming that profileImg is the image tag in which you want to render your profile image\r\n               //      const profilePic = document.getElementById(\"profileImg\");\r\n\r\n               //      if (profilePic!== null){\r\n               //           console.log(\"Succesful updateProfilePicture 3/4\")\r\n               //           profilePic.setAttribute(\"url\", URL.createObjectURL(await response));\r\n               //           console.log(\"Succesful updateProfilePicture 4/4\")\r\n               //      }\r\n               // } catch (error) {\r\n               //      console.error(error);\r\n               //      console.log(\"Failed updateProfilePicture\");\r\n               // }\r\n          }\r\n          \r\n          function successCallback(response: AuthResponse): void {\r\n               if (response.tokenType === \"id_token\") {\r\n                    thisObj.authenticate();\r\n\r\n               } else if (response.tokenType === \"access_token\") {\r\n\r\n                    accessToken = response.accessToken;\r\n                    thisObj.setUsername(response.account.name);\r\n                    updateProfilePicture();\r\n               \r\n                    // Refresh User Permissions\r\n                    thisObj.tryRefreshUserPermissions();\r\n                    thisObj.getembedUrl();\r\n                    \r\n\r\n                    // thisObj.setReportPage();\r\n\r\n               } else {\r\n\r\n                    thisObj.setState({ error: [(\"Token type is: \" + response.tokenType)] });\r\n               }\r\n          }\r\n\r\n          function failCallBack(error: AuthError): void {\r\n               thisObj.setState({ error: [\"Redirect error: \" + error] });\r\n          }\r\n\r\n          // function sendHome(): void{\r\n          //      let navigate = useNavigate();\r\n          //      navigate('/')\r\n          // }\r\n\r\n          msalInstance.handleRedirectCallback(successCallback, failCallBack);\r\n\r\n          // check if there is a cached user\r\n          if (msalInstance.getAccount()) {\r\n\r\n               // get access token silently from cached id-token\r\n               msalInstance.acquireTokenSilent(loginRequest)\r\n                    .then((response: AuthResponse) => {\r\n\r\n                         // get access token from response: response.accessToken\r\n                         accessToken = response.accessToken;\r\n                         this.setUsername(response.account.name);\r\n                         updateProfilePicture()\r\n                         // this.setUserPic(response.account.);\r\n                         this.getembedUrl();\r\n                    })\r\n                    .catch((err: AuthError) => {\r\n\r\n                         // refresh access token silently from cached id-token\r\n                         // makes the call to handleredirectcallback\r\n                         if (err.name === \"InteractionRequiredAuthError\") {\r\n                              msalInstance.acquireTokenRedirect(loginRequest);\r\n                         }\r\n                         else {\r\n                              if (window.location.pathname === \"/\"){\r\n                                   thisObj.setState({ error: [err.toString()] })\r\n                              } else{\r\n\r\n                                   this.props.setTargetPath(window.location.href);\r\n                                   // window.location.href = '/';\r\n                                   // window.history.pushState(\"\", \"\", \"/\");\r\n                                   // this.props.sendHome();\r\n                                   // this.navigateTo(\"/\");\r\n                                   this.navigateHomeAndBack()\r\n                                   \r\n                              }\r\n                         }\r\n                    });\r\n          } else {\r\n\r\n               // user is not logged in or cached, you will need to log them in to acquire a token\r\n               if (window.location.pathname === \"/\"){\r\n                    msalInstance.loginRedirect(loginRequest);\r\n               } else{\r\n                    \r\n                    this.props.setTargetPath(window.location.href);\r\n\r\n                    // window.location.href = '/';\r\n                    \r\n                    // window.history.pushState(\"\", \"\", \"/\");\r\n                    // this.props.sendHome();\r\n                    // this.navigateTo(\"/\");\r\n                    this.navigateHomeAndBack()\r\n\r\n                    \r\n               }\r\n\r\n          }\r\n     }\r\n\r\n    // Power BI REST API call to refresh User Permissions in Power BI\r\n    // Refreshes user permissions and makes sure the user permissions are fully updated\r\n    // https://docs.microsoft.com/rest/api/power-bi/users/refreshuserpermissions\r\n     tryRefreshUserPermissions(): void {\r\n          fetch(\"https://api.powerbi.com/v1.0/myorg/RefreshUserPermissions\", {\r\n               headers: {\r\n                    \"Authorization\": \"Bearer \" + accessToken\r\n               },\r\n               method: \"POST\"\r\n          })\r\n          .then(function (response) {\r\n               if (response.ok) {\r\n                    console.log(\"User permissions refreshed successfully.\");\r\n               } else {\r\n                    // Too many requests in one hour will cause the API to fail\r\n                    if (response.status === 429) {\r\n                         console.error(\"Permissions refresh will be available in up to an hour.\");\r\n                    } else {\r\n                         console.error(response);\r\n                    }\r\n               }\r\n          })\r\n          .catch(function (error) {\r\n               console.error(\"Failure in making API call.\" + error);\r\n          });\r\n     }\r\n\r\n    // Power BI REST API call to get the embed URL of the report\r\n     getembedUrl(): void {\r\n          const thisObj: this = this;\r\n\r\n          fetch(\"https://api.powerbi.com/v1.0/myorg/groups/\" + this.props.workspace + \"/reports/\" + this.props.report, {\r\n               headers: {\r\n                    \"Authorization\": \"Bearer \" + accessToken\r\n               },\r\n               method: \"GET\"\r\n          })\r\n               .then(function (response) {\r\n                    const errorMessage: string[] = [];\r\n                    errorMessage.push(\"Error occurred while fetching the embed URL of the report\")\r\n                    errorMessage.push(\"Request Id: \" + response.headers.get(\"requestId\"));\r\n\r\n                    response.json()\r\n                         .then(function (body) {\r\n                         // Successful response\r\n                         if (response.ok) {\r\n                              embedUrl = body[\"embedUrl\"];\r\n                              thisObj.setState({ accessToken: accessToken, embedUrl: embedUrl });\r\n                         }\r\n                         // If error message is available\r\n                         else {\r\n                              errorMessage.push(\"Error \" + response.status + \": \" + body.error.code);\r\n\r\n                              thisObj.setState({ error: errorMessage });\r\n                         }\r\n\r\n                         })\r\n                         .catch(function () {\r\n                         errorMessage.push(\"Error \" + response.status + \":  An error has occurred\");\r\n\r\n                         thisObj.setState({ error: errorMessage });\r\n                         });\r\n               })\r\n               .catch(function (error) {\r\n\r\n                    // Error in making the API call\r\n                    thisObj.setState({ error: error });\r\n               })\r\n     }\r\n\r\n    // Show username in the UI\r\n     setUsername(username: string): void {\r\n          const welcome = document.getElementById(\"welcome\");\r\n          if (welcome !== null)\r\n               welcome.innerText = \"\" + username;\r\n     }\r\n\r\n\r\n     // setReportPage(): void {\r\n     //      // setPage will change the selected view to the page you indicate.\r\n     //      // This is the actual page name not the display name.\r\n     //      const pageName = this.props.page\r\n     //      const embedConfiguration: IEmbedConfiguration = {\r\n     //           type: \"report\",\r\n     //           tokenType: models.TokenType.Aad,\r\n     //           accessToken,\r\n     //           embedUrl,\r\n     //           id: this.props.report,\r\n               \r\n     //           // Enable this setting to remove gray shoulders from embedded report\r\n     //           settings: {\r\n     //                // background: models.BackgroundType.Transparent,\r\n     //                panes: {\r\n     //                     pageNavigation: {\r\n     //                          visible: false\r\n     //                     },\r\n     //                },\r\n     //           }\r\n               \r\n     //      };\r\n\r\n     //      const report = powerbi.embed(reportContainer, embedConfiguration);\r\n     //      try {\r\n     //           report.setPage(pageName);\r\n     //           console.log(`Page was set to: ${pageName}`);\r\n     //      }\r\n     //      catch (errors) {\r\n     //           console.log(errors);\r\n     //      }\r\n     // }\r\n     \r\n}\r\n\r\nexport default Embed;","// ----------------------------------------------------------------------------\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n// ----------------------------------------------------------------------------\r\n\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n\r\n// Scope of AAD app. Use the below configuration to use all the permissions provided in the AAD app through Azure portal.\r\n// Refer https://aka.ms/PowerBIPermissions for complete list of Power BI scopes\r\nexport const scopes: string[] = [\"https://analysis.windows.net/powerbi/api/Report.Read.All\"];\r\n\r\n// Client Id (Application Id) of the AAD app.\r\nexport const clientId: string = \"6b04c589-4d79-410d-81c1-832d2ef254c3\";\r\n\r\n// Id of the workspace where the report is hosted\r\nexport const workspaceId: string = \"3fab8396-2540-43b3-9b32-a532bed12660\";\r\n\r\n// Id of the report to be embedded\r\nexport const reportId: string = \"36ed2a5c-1209-4720-a651-e557a6d1008f\";\r\n\r\nexport const tenantId: string = \"e0793d39-0939-496d-b129-198edd916feb\"","import React, { Component } from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./top-bar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n     service,\r\n     factories,\r\n     models,\r\n     IEmbedConfiguration,\r\n     Report,\r\n} from \"powerbi-client\";\r\nimport * as config from \"../../Config\";\r\n\r\nconst powerbi = new service.Service(\r\n     factories.hpmFactory,\r\n     factories.wpmpFactory,\r\n     factories.routerFactory\r\n);\r\n\r\nclass Top_bar extends React.Component {\r\n     render() {\r\n          return (\r\n               <div className=\"top-bar smooth-nav\">\r\n                    {/* <header className=\"top-bar smooth-nav\"> */}\r\n                    <ul>\r\n                         <li id=\"GBeaconIcon\">\r\n                              <Link\r\n                                   to={\"/GrowthBeacon/\"}\r\n                                   className={\"navbar_section selected\".concat(\r\n                                        this.props.section === \"Home\"\r\n                                             ? \" \"\r\n                                             : \" nobar \",\r\n                                        this.props.section\r\n                                   )}\r\n                                   // style={\"border: none;\"}\r\n                              >\r\n                                   <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"22.016\"\r\n                                        height=\"34\"\r\n                                        viewBox=\"0 0 22.016 34\"\r\n                                   >\r\n                                        <g\r\n                                             id=\"Grupo_256\"\r\n                                             data-name=\"Grupo 256\"\r\n                                             transform=\"translate(-84.812 -19.5)\"\r\n                                        >\r\n                                             <path\r\n                                                  id=\"Trazado_105\"\r\n                                                  data-name=\"Trazado 105\"\r\n                                                  d=\"M1069.82,527.74h3l-.68,12.26h16.135l-.68-12.26h3a.641.641,0,0,0,.623-.657v-.742a.641.641,0,0,0-.623-.657H1089.1v-5.74h1.489a.64.64,0,0,0,.623-.657v-.742a.641.641,0,0,0-.623-.657h-2.383v-2.741h2.349a.657.657,0,0,0,.657-.657v-.742a.657.657,0,0,0-.657-.657h-3.308a7.591,7.591,0,0,0-4.949-5.807.176.176,0,0,0-.062-.268l-2.048-1a.174.174,0,0,0-.155,0l-2.048,1a.176.176,0,0,0-.072.254,7.586,7.586,0,0,0-5,5.822h-3.064a.657.657,0,0,0-.657.657v.742a.657.657,0,0,0,.657.657h2.349v2.741h-2.383a.64.64,0,0,0-.623.657v.742a.64.64,0,0,0,.623.657h1.733v5.74h-1.733a.64.64,0,0,0-.623.657v.742A.64.64,0,0,0,1069.82,527.74Zm16.129-7.8h1.365v5.74h-1.365Zm-3.153,0h1.365v5.74H1082.8Zm-3.152,0h1.365v5.74h-1.365Zm-3.152,0h1.365v5.74h-1.365Zm-3.152,0h1.365v5.74h-1.365Z\"\r\n                                                  transform=\"translate(-984.385 -486.5)\"\r\n                                             />\r\n                                        </g>\r\n                                   </svg>\r\n                              </Link>\r\n                         </li>\r\n\r\n                         <li id=\"GBPrioritiesB\">\r\n                              <Link\r\n                                   id=\"Link_GBPriorities\"\r\n                                   to={\"/GrowthBeacon/Priorities\"}\r\n                                   className=\"invisible\"\r\n                              ></Link>\r\n                              <button\r\n                                   id=\"Btn_GBPriorities\"\r\n                                   className={\r\n                                        this.props.section === \"Priorities\"\r\n                                             ? \"navbar_section selected\"\r\n                                             : \"navbar_section\"\r\n                                   }\r\n                                   // onClick={() => {\r\n                                   //      document\r\n                                   //           .getElementById(\r\n                                   //                \"Link_GBPriorities\"\r\n                                   //           )\r\n                                   //           .click();\r\n                                   // }}\r\n                              >\r\n                                   <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"25\"\r\n                                        height=\"25\"\r\n                                        viewBox=\"0 0 25 25\"\r\n                                   >\r\n                                        <path\r\n                                             id=\"Trazado_104\"\r\n                                             data-name=\"Trazado 104\"\r\n                                             d=\"M1284.5,76.232V74.768h-4.609a7.94,7.94,0,0,0-1.8-4.322l3.267-3.267-1.036-1.036-3.266,3.266a7.94,7.94,0,0,0-4.322-1.808V63h-1.465v4.594a7.939,7.939,0,0,0-4.366,1.771l-3.222-3.222-1.036,1.036,3.215,3.215a7.94,7.94,0,0,0-1.846,4.374H1259.5v1.465h4.506a7.94,7.94,0,0,0,1.815,4.411l-2.646,2.645c-.032-.056-.083-.055-.18.041a.817.817,0,0,0-.206.345l-.146.146.112.112a.83.83,0,0,0,.809.809l.115.115.151-.151a.814.814,0,0,0,.338-.2c.1-.1.1-.149.042-.177l2.647-2.647a7.94,7.94,0,0,0,4.411,1.808V88h1.465V83.479a7.94,7.94,0,0,0,4.365-1.846l3.223,3.223,1.036-1.036-3.231-3.231a7.941,7.941,0,0,0,1.771-4.358Zm-6.549-1.465h-2.711a3.356,3.356,0,0,0-.435-1.036l1.915-1.915A6.018,6.018,0,0,1,1277.951,74.768Zm-2.267-3.987-1.914,1.914a3.36,3.36,0,0,0-1.037-.44V69.542A6.019,6.019,0,0,1,1275.684,70.78Zm-4.416-1.251v2.7a3.356,3.356,0,0,0-1.075.425l-1.919-1.919A6.018,6.018,0,0,1,1271.268,69.529Zm-4.041,2.233,1.91,1.91a3.361,3.361,0,0,0-.474,1.1h-2.711A6.022,6.022,0,0,1,1267.227,71.762Zm-1.285,4.47h2.7a3.356,3.356,0,0,0,.461,1.126l-1.914,1.914A6.02,6.02,0,0,1,1265.942,76.232Zm2.287,4.075,1.915-1.915a3.357,3.357,0,0,0,1.125.456v2.7A6.019,6.019,0,0,1,1268.228,80.308Zm4.5,1.231V78.826a3.361,3.361,0,0,0,1.086-.472l1.91,1.91A6.021,6.021,0,0,1,1272.733,81.538Zm4.021-2.32-1.919-1.919a6.393,6.393,0,0,0,.423-1.067h2.7A6.018,6.018,0,0,1,1276.754,79.218Z\"\r\n                                             transform=\"translate(-1259.5 -63)\"\r\n                                        />\r\n                                   </svg>\r\n                                   Priorities\r\n                              </button>\r\n                         </li>\r\n\r\n                         <li id=\"GBIndustriesB\">\r\n                              <Link\r\n                                   id=\"Link_GBIndustries\"\r\n                                   to={\"/GrowthBeacon/Industries\"}\r\n                                   className=\"invisible\"\r\n                              ></Link>\r\n                              <button\r\n                                   id=\"Btn_GBIndustries\"\r\n                                   className={\r\n                                        this.props.section === \"industries\"\r\n                                             ? \"navbar_section selected industries\"\r\n                                             : \"navbar_section\"\r\n                                   }\r\n                                   // onClick={() => {\r\n                                   //      document\r\n                                   //           .getElementById(\r\n                                   //                \"Link_GBIndustries\"\r\n                                   //           )\r\n                                   //           .click();\r\n                                   // }}\r\n                              >\r\n                                   <svg\r\n                                        id=\"Grupo_281\"\r\n                                        data-name=\"Grupo 281\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"22\"\r\n                                        height=\"22\"\r\n                                        viewBox=\"0 0 22 22\"\r\n                                   >\r\n                                        <path\r\n                                             id=\"Trazado_100\"\r\n                                             data-name=\"Trazado 100\"\r\n                                             d=\"M967.974,486a11,11,0,1,0,11,11A11,11,0,0,0,967.974,486Zm0,19.343A8.343,8.343,0,1,1,976.317,497,8.343,8.343,0,0,1,967.974,505.343Z\"\r\n                                             transform=\"translate(-956.974 -486)\"\r\n                                        />\r\n                                        <path\r\n                                             id=\"Trazado_101\"\r\n                                             data-name=\"Trazado 101\"\r\n                                             d=\"M977.217,486.773a.224.224,0,0,0-.217,0l-12.046,6.687-.04,0-7,12.588a.063.063,0,0,0,0,.063.065.065,0,0,0,.088.025l12.674-7.086v0l6.627-11.969A.223.223,0,0,0,977.217,486.773Zm-9.274,10.852a1.41,1.41,0,1,1,1.411-1.41A1.411,1.411,0,0,1,967.943,497.625Z\"\r\n                                             transform=\"translate(-956.619 -485.717)\"\r\n                                        />\r\n                                   </svg>\r\n                                   Industries\r\n                              </button>\r\n                         </li>\r\n\r\n                         <li id=\"GBInfoCenterB\" className=\"last-main\">\r\n                              <a href=\"\" className=\"navbar_section stroke\">\r\n                                   <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"21\"\r\n                                        height=\"21\"\r\n                                        viewBox=\"0 0 21 21\"\r\n                                   >\r\n                                        <g\r\n                                             id=\"Elipse_27\"\r\n                                             data-name=\"Elipse 27\"\r\n                                             fill=\"none\"\r\n                                             stroke-width=\"3\"\r\n                                        >\r\n                                             <circle\r\n                                                  cx=\"10.5\"\r\n                                                  cy=\"10.5\"\r\n                                                  r=\"10.5\"\r\n                                                  stroke=\"none\"\r\n                                             />\r\n                                             <circle\r\n                                                  cx=\"10.5\"\r\n                                                  cy=\"10.5\"\r\n                                                  r=\"9\"\r\n                                                  fill=\"none\"\r\n                                             />\r\n                                        </g>\r\n                                   </svg>\r\n                                   Info Center\r\n                              </a>\r\n                         </li>\r\n\r\n                         {/* <!-- <li className=\"last-main\">\r\n                         <a href=\"Help_Priorities.html\" \r\n                              onclick= 'show(\"app.powerbi.com/reportEmbed?reportId=46e97962-3e83-4a88-93c3-51093e425779&autoAuth=true&filterPaneEnabled=false&navContentPaneEnabled=false&ctid=e0793d39-0939-496d-b129-198edd916feb&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLXVzLW5vcnRoLWNlbnRyYWwtcmVkaXJlY3QuYW5hbHlzaXMud2luZG93cy5uZXQvIn0%3D&pageName=ReportSection638c9f33c2d5831d432d\");'\r\n                              className=\"navbar_section\">\r\n\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.556\" height=\"15.556\" viewBox=\"0 0 15.556 15.556\"\r\n                                        style=\"margin-bottom: 5px;\">\r\n                                        <path id=\"Rectángulo_235\" data-name=\"Rectángulo 235\" d=\"M3,3V8H8V3H3M0,0H11V11H0Z\" transform=\"translate(7.778) rotate(45)\"/>\r\n                              </svg>\r\n                              Help\r\n                         </a>\r\n                    </li> -->*/}\r\n\r\n                         {/* <li>\r\n                              <img\r\n                                   id=\"profileImg\"\r\n                                   className=\"profile-pic\"\r\n                              ></img>\r\n                         </li> */}\r\n\r\n                         <li id=\"GBUserB\">\r\n                              <div\r\n                                   id=\"welcome\"\r\n                                   className={\r\n                                        this.props.section === \"industries\"\r\n                                             ? \"ac-orange\"\r\n                                             : \"ac-purple\"\r\n                                   }\r\n                              >\r\n                                   Welcome\r\n                              </div>\r\n                         </li>\r\n                    </ul>\r\n                    {/* </header> */}\r\n               </div>\r\n          );\r\n     }\r\n\r\n     // getFilters() {\r\n     //      const embedConfiguration = {\r\n     //           type: \"report\",\r\n     //           tokenType: models.TokenType.Aad,\r\n     //           accessToken,\r\n     //           embedUrl,\r\n     //           id: this.props.report,\r\n\r\n     //           // Enable this setting to remove gray shoulders from embedded report\r\n     //           settings: {\r\n     //                panes: {\r\n     //                     filters: {\r\n     //                          visible: true,\r\n     //                     },\r\n     //                     pageNavigation: {\r\n     //                          visible: false,\r\n     //                     },\r\n     //                },\r\n     //           },\r\n     //      };\r\n\r\n     //      // Get a reference to the embedded report HTML element\r\n     //      let reportContainer = $(\"#reportContainer\")[0];\r\n     //      let report = powerbi.embed(reportContainer, embedConfiguration);\r\n     // }\r\n}\r\n\r\nexport default Top_bar;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\n// import \"./App.css\";\r\n\r\nimport \"../../Embed.css\";\r\nimport \"../../dropdown.css\";\r\nimport \"./modal.css\";\r\n\r\nclass ViewsModal extends React.Component {\r\n     render() {\r\n          return (\r\n               // <React.Fragment>\r\n               <div\r\n                    class=\"modal fade\"\r\n                    //  id=\"captureModal\"\r\n                    id=\"captureModal\"\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"capture-btn\"\r\n                    aria-hidden=\"true\"\r\n               >\r\n                    <div class=\"vertical-alignment-helper\">\r\n                         <div class=\"modal-dialog vertical-align-center\">\r\n                              <div class=\"modal-content\">\r\n                                   <div class=\"d-flex flex-row-reverse\">\r\n                                        <button\r\n                                             type=\"button\"\r\n                                             id=\"close-modal-btn\"\r\n                                             class=\"close\"\r\n                                             data-dismiss=\"modal\"\r\n                                             aria-label=\"Close dialog\"\r\n                                             onClick={() => {\r\n                                                  let captureDropdown =\r\n                                                       document.getElementById(\r\n                                                            \"captureModal\"\r\n                                                       );\r\n                                                  if (captureDropdown) {\r\n                                                       captureDropdown.style.display =\r\n                                                            \"none\";\r\n                                                  }\r\n                                             }}\r\n                                        >\r\n                                             X\r\n                                        </button>\r\n                                   </div>\r\n                                   <div class=\"modal-header\">\r\n                                        <h4\r\n                                             class=\"modal-title modal-subject\"\r\n                                             id=\"my-modal-label\"\r\n                                        >\r\n                                             What would you like to do with this\r\n                                             view?\r\n                                        </h4>\r\n                                   </div>\r\n                                   <div class=\"modal-body\" role=\"tablist\">\r\n                                        <button\r\n                                             role=\"tab\"\r\n                                             id=\"save-view-btn\"\r\n                                             className=\"btn-modal btn-links btn-active\"\r\n                                             aria-controls=\"save-view-div\"\r\n                                             onClick={\r\n                                                  this.handleSave2ViewsClick\r\n                                             }\r\n                                        >\r\n                                             Save to 'My Views'\r\n                                        </button>\r\n                                        <button\r\n                                             role=\"tab\"\r\n                                             id=\"copy-link-btn\"\r\n                                             className=\"btn-modal btn-links\"\r\n                                             aria-controls=\"capture-view-div\"\r\n                                             onClick={this.handleCopyClick}\r\n                                        >\r\n                                             Copy Link\r\n                                        </button>\r\n                                   </div>\r\n                                   <div id=\"content-div\">\r\n                                        <div\r\n                                             role=\"tabpanel\"\r\n                                             id=\"save-view-div\"\r\n                                             aria-labelledby=\"save-view-btn\"\r\n                                        >\r\n                                             <form novalidate>\r\n                                                  <label\r\n                                                       class=\"view-label\"\r\n                                                       for=\"viewname\"\r\n                                                  >\r\n                                                       Enter a name for this\r\n                                                       view:\r\n                                                  </label>\r\n                                                  <input\r\n                                                       type=\"text\"\r\n                                                       class=\"modal-text\"\r\n                                                       id=\"viewname\"\r\n                                                       placeholder=\"Example: December 2019 Sales Profit\"\r\n                                                       required\r\n                                                  />\r\n                                                  <div class=\"invalid-feedback\">\r\n                                                       Please provide a valid\r\n                                                       name\r\n                                                  </div>\r\n                                                  <div id=\"save-btn-div\">\r\n                                                       <button\r\n                                                            id=\"btn-save2-my-views\"\r\n                                                            type=\"button\"\r\n                                                       >\r\n                                                            Save\r\n                                                       </button>\r\n                                                  </div>\r\n                                             </form>\r\n                                        </div>\r\n                                        <div\r\n                                             role=\"tabpanel\"\r\n                                             id=\"capture-view-div\"\r\n                                             aria-labelledby=\"copy-link-btn\"\r\n                                        >\r\n                                             <label class=\"capture-link-note\">\r\n                                                  Use this link to share the\r\n                                                  view with colleagues\r\n                                             </label>\r\n                                             <input\r\n                                                  type=\"text\"\r\n                                                  class=\"modal-text\"\r\n                                                  id=\"copy-link-text\"\r\n                                                  readonly\r\n                                             />\r\n                                             <div\r\n                                                  id=\"copy-link-success-msg\"\r\n                                                  class=\"invisible\"\r\n                                             >\r\n                                                  Copied successfully!\r\n                                             </div>\r\n                                             <div class=\"capture-btn-div\">\r\n                                                  <button\r\n                                                       class=\"copy-bookmark modal-btn\"\r\n                                                       id=\"btn-copy-link\"\r\n                                                  >\r\n                                                       {/* <img role=\"presentation\" id=\"tick-icon\" src=\"img/tickicon.svg\" alt=\"tickmark\"> */}\r\n                                                       <span id=\"tick-btn\">\r\n                                                            Copy\r\n                                                       </span>\r\n                                                  </button>\r\n                                             </div>\r\n                                        </div>\r\n                                   </div>\r\n                              </div>\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n               // </React.Fragment>\r\n          );\r\n     }\r\n\r\n     handleCopyClick() {\r\n          let sctCopy = document.getElementById(\"copy-link-btn\");\r\n          let divCopy = document.getElementById(\"capture-view-div\");\r\n          let sctSave = document.getElementById(\"save-view-btn\");\r\n          let divSave = document.getElementById(\"save-view-div\");\r\n          let copyMsg = document.getElementById(\"copy-link-success-msg\");\r\n\r\n          if ((sctCopy != null) & (sctSave != null)) {\r\n               sctCopy.className = \"btn-modal btn-links btn-active\";\r\n               sctSave.className = \"btn-modal btn-links\";\r\n\r\n               if ((divCopy != null) & (divSave != null) & (copyMsg != null)) {\r\n                    divCopy.style.display = \"block\";\r\n                    divSave.style.display = \"none\";\r\n                    copyMsg.style.display = \"none\";\r\n               }\r\n          }\r\n     }\r\n\r\n     handleSave2ViewsClick() {\r\n          let sctCopy = document.getElementById(\"copy-link-btn\");\r\n          let divCopy = document.getElementById(\"capture-view-div\");\r\n          let sctSave = document.getElementById(\"save-view-btn\");\r\n          let divSave = document.getElementById(\"save-view-div\");\r\n\r\n          if ((sctCopy != null) & (sctSave != null)) {\r\n               sctCopy.className = \"btn-modal btn-links\";\r\n               sctSave.className = \"btn-modal btn-links btn-active\";\r\n\r\n               if ((divCopy != null) & (divSave != null)) {\r\n                    divCopy.style.display = \"none\";\r\n                    divSave.style.display = \"block\";\r\n               }\r\n          }\r\n     }\r\n}\r\n\r\nexport default ViewsModal;\r\n","import { AuthenticationProvider } from \"@microsoft/microsoft-graph-client\";\r\nimport * as qs from \"qs\";\r\nimport axios from \"axios\";\r\nimport * as Config from \"../../Config\";\r\nimport config from \"config\";\r\n\r\nexport class MyAuthenticationProvider implements AuthenticationProvider {\r\n\r\n     public async getAccessToken(): Promise<string> {\r\n\r\n          const url: string = \"https://login.microsoftonline.com/\" + Config.tenantId + \"/oauth2/v2.0/token\";\r\n\r\n          const body: object = {\r\n               client_id: Config.clientId,\r\n               client_secret: \"02D7Q~cmg_cAKIaaEi~mEMns2YwZa.588-fOP\",\r\n               scope: \"https://graph.microsoft.com/.default\",\r\n               grant_type: \"client_credentials\"\r\n          }\r\n\r\n          try {\r\n\r\n               let response = await axios.post(url, qs.stringify(body))\r\n\r\n               if (response.status == 200) {\r\n\r\n                    return response.data.access_token;\r\n\r\n               } else {\r\n\r\n                    throw new Error(\"Non 200OK response on obtaining token...\")\r\n\r\n               }\r\n\r\n          } catch (error) {\r\n\r\n               throw new Error(\"Error on obtaining token...\")\r\n\r\n          }\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { UserAgentApplication, AuthError, AuthResponse } from \"msal\";\r\nimport { service, factories, models, IEmbedConfiguration, Report } from \"powerbi-client\";\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\n// import { PowerBIEmbed, EventHandler } from 'powerbi-client-react';\r\nimport * as config from \"../../Config\";\r\n// import { workspaceId } from '../../Config';\r\nimport { PseudoBigInt } from \"typescript\";\r\n\r\n// import \"isomorphic-fetch\"; // or import the fetch polyfill you installed\r\nimport { Client, ClientOptions, AuthenticationProvider} from \"@microsoft/microsoft-graph-client\"; // To get profile pics\r\nimport { MyAuthenticationProvider } from \"./AuthProvider\";\r\n\r\n// const powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\r\n\r\nlet accessToken = \"\";\r\nlet embedUrl = \"\";\r\nlet reportContainer: HTMLElement;\r\nlet reportRef: React.Ref<HTMLDivElement>;\r\nlet loading: JSX.Element;\r\n// let btnGetFilter: HTMLButtonElement;\r\nlet btnRef: React.Ref<HTMLButtonElement>;\r\nlet EuropebtnRef: React.Ref<HTMLButtonElement>;\r\nlet fullSbtnRef: React.Ref<HTMLButtonElement>;\r\nlet report: Report;\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface AppProps { report:string; workspace:string; page:string; redirectTo?:string; \r\n     setTargetPath(targetPath:string|null):void; \r\n     getTargetPath():string|null;\r\n};\r\ninterface AppState { accessToken: string; embedUrl: string; error: string[] };\r\n\r\nclass UserAuthentication extends React.Component<AppProps, AppState> {\r\n\r\n     constructor(props: AppProps) {\r\n          super(props);\r\n\r\n          this.state = { accessToken: \"\", embedUrl: \"\", error: [] };\r\n\r\n          // this.tryRefreshUserPermissions = this.tryRefreshUserPermissions.bind(this);\r\n     }\r\n\r\n    // React function\r\n     render(): JSX.Element {\r\n          // this.authenticate();\r\n          if(window.location.pathname!=\"/\"){\r\n               this.props.setTargetPath(window.location.href);\r\n          }\r\n          return <></>;\r\n     }\r\n\r\n     // React function\r\n     componentDidMount(): void {\r\n\r\n          // if (reportRef !== null) {\r\n          //      reportContainer = reportRef[\"current\"];\r\n          // }\r\n          // // if (btnRef !== null){\r\n          // //      btnGetFilter = btnRef[\"current\"];\r\n          // // }\r\n\r\n          // // User input - null check\r\n          // if (config.workspaceId === \"\" || config.reportId === \"\") {\r\n          //      this.setState({ error: [\"Please assign values to workspace Id and report Id in Config.ts file\"] })\r\n          // } else {\r\n\r\n          //      // Authenticate the user and generate the access token\r\n          //      this.authenticate();\r\n          // }\r\n          this.authenticate();\r\n\r\n          // this.getFilters()\r\n          \r\n     }\r\n\r\n    // React function\r\n     componentWillUnmount(): void {\r\n\r\n          // try {\r\n          //      const filters = report.getFilters();\r\n          //      console.log(filters);\r\n          // }\r\n          // catch (errors) {\r\n          //      console.log(errors);\r\n          // }\r\n          // powerbi.reset(reportContainer);\r\n     }\r\n\r\n    // Authenticating to get the access token\r\n     authenticate(): void {\r\n          \r\n          // if(window.location.pathname!=\"/\"){\r\n          //      this.props.setTargetPath(window.location.href);\r\n          // }\r\n\r\n          // let navigate = useNavigate();\r\n\r\n          const thisObj = this;\r\n          const orgRedirectTo = thisObj.props.getTargetPath()\r\n\r\n          const msalConfig = {\r\n               auth: {\r\n                    clientId: config.clientId,\r\n                    authority: \"https://login.microsoftonline.com/\" + config.tenantId,\r\n               }\r\n          };\r\n\r\n          const loginRequest = {\r\n               scopes: config.scopes\r\n          };\r\n\r\n          const msalInstance: UserAgentApplication = new UserAgentApplication(msalConfig);\r\n\r\n          // let clientOptions: ClientOptions = {\r\n          //      authProvider: ,\r\n          // };\r\n          // const client = Client.initWithMiddleware(clientOptions);\r\n\r\n          const options: ClientOptions = {\r\n               authProvider: new MyAuthenticationProvider(),\r\n          };\r\n          \r\n          const client = Client.initWithMiddleware(options);\r\n          // const client = Client.init();\r\n\r\n          async function updateProfilePicture (): Promise<void> {\r\n               console.log(\"Succesful updateProfilePicture 0/4\")\r\n               // try {\r\n               //      // let response = await client.api(\"/me/photo/$value\").get();\r\n               //      console.log(\"Succesful updateProfilePicture 1/4\")\r\n               //      let response = await client.api(\"/me\").get();\r\n               //      console.log(\"Succesful updateProfilePicture 2/4\")\r\n               //           // Assuming that profileImg is the image tag in which you want to render your profile image\r\n               //      const profilePic = document.getElementById(\"profileImg\");\r\n\r\n               //      if (profilePic!== null){\r\n               //           console.log(\"Succesful updateProfilePicture 3/4\")\r\n               //           profilePic.setAttribute(\"url\", URL.createObjectURL(await response));\r\n               //           console.log(\"Succesful updateProfilePicture 4/4\")\r\n               //      }\r\n               // } catch (error) {\r\n               //      console.error(error);\r\n               //      console.log(\"Failed updateProfilePicture\");\r\n               // }\r\n          }\r\n          \r\n          function successCallback(response: AuthResponse): void {\r\n               if (response.tokenType === \"id_token\") {\r\n                    thisObj.authenticate();\r\n\r\n               } else if (response.tokenType === \"access_token\") {\r\n\r\n                    accessToken = response.accessToken;\r\n                    console.log(\"Succesfull Login\")\r\n                    thisObj.setUsername(response.account.name);\r\n                    updateProfilePicture();\r\n                    let redirectTo = thisObj.props.getTargetPath()\r\n\r\n                    if ((orgRedirectTo) && (orgRedirectTo!=\"Null\")){\r\n                         thisObj.props.setTargetPath(null)\r\n                         window.location.href = orgRedirectTo;\r\n                    }\r\n                    \r\n                    // Refresh User Permissions\r\n                    thisObj.tryRefreshUserPermissions();\r\n                    \r\n               } else {\r\n\r\n                    thisObj.setState({ error: [(\"Token type is: \" + response.tokenType)] });\r\n               }\r\n          }\r\n\r\n          function failCallBack(error: AuthError): void {\r\n               thisObj.setState({ error: [\"Redirect error: \" + error] });\r\n          }\r\n\r\n          msalInstance.handleRedirectCallback(successCallback, failCallBack);\r\n\r\n          // check if there is a cached user\r\n          if (msalInstance.getAccount()) {\r\n\r\n               // get access token silently from cached id-token\r\n               msalInstance.acquireTokenSilent(loginRequest)\r\n                    .then((response: AuthResponse) => {\r\n\r\n                         // get access token from response: response.accessToken\r\n                         accessToken = response.accessToken;\r\n                         this.setUsername(response.account.name);\r\n                         updateProfilePicture()\r\n                         let redirectTo = this.props.getTargetPath()\r\n                         if ((redirectTo) && (redirectTo!=\"Null\")){\r\n                              this.props.setTargetPath(null)\r\n                              window.location.href = redirectTo;\r\n                         }\r\n                         // this.setUserPic(response.account.);\r\n                         // this.getembedUrl();\r\n                    })\r\n                    .catch((err: AuthError) => {\r\n\r\n                         // refresh access token silently from cached id-token\r\n                         // makes the call to handleredirectcallback\r\n                         if (err.name === \"InteractionRequiredAuthError\") {\r\n                              msalInstance.acquireTokenRedirect(loginRequest);\r\n                         }\r\n                         else {\r\n                              if (window.location.pathname === \"/\"){\r\n                                   thisObj.setState({ error: [err.toString()] })\r\n                              } else {\r\n                                   // navigate('/')\r\n                                   // if(window.location.pathname!=\"/\"){\r\n                                        this.props.setTargetPath(window.location.href);\r\n                                   // }\r\n                                   setTimeout(() =>{\r\n                                        // document.getElementById(\"LinkEmbedHome\")?.click();\r\n                                        // this.navigateHome()\r\n                                        window.location.href = '/';\r\n                                   }, 1000);\r\n                                   \r\n                              }\r\n                         }\r\n                    });\r\n          } else {\r\n\r\n               // user is not logged in or cached, you will need to log them in to acquire a token\r\n               if (window.location.pathname === \"/\"){\r\n                    msalInstance.loginRedirect(loginRequest);\r\n               } else{\r\n                    if(window.location.pathname!=\"/\"){\r\n                         this.props.setTargetPath(window.location.href);\r\n                    }\r\n                    setTimeout(() =>{\r\n                         // document.getElementById(\"LinkEmbedHome\")?.click();\r\n                         // this.navigateHome()\r\n                         window.location.href = '/';\r\n                    }, 1000);\r\n               }\r\n\r\n          }\r\n     }\r\n\r\n    // Power BI REST API call to refresh User Permissions in Power BI\r\n    // Refreshes user permissions and makes sure the user permissions are fully updated\r\n    // https://docs.microsoft.com/rest/api/power-bi/users/refreshuserpermissions\r\n     tryRefreshUserPermissions(): void {\r\n          const thisObj = this;\r\n\r\n          fetch(\"https://api.powerbi.com/v1.0/myorg/RefreshUserPermissions\", {\r\n               headers: {\r\n                    \"Authorization\": \"Bearer \" + accessToken\r\n               },\r\n               method: \"POST\"\r\n          })\r\n          .then(function (response) {\r\n               if (response.ok) {\r\n                    console.log(\"User permissions refreshed successfully.\");\r\n\r\n                    let redirectTo = thisObj.props.getTargetPath()\r\n                    if ((redirectTo) && (redirectTo!=\"Null\")){\r\n                         thisObj.props.setTargetPath(null)\r\n                         window.location.href = redirectTo;\r\n                    }\r\n                    \r\n                    // if ((thisObj.props.redirectTo) && (thisObj.props.redirectTo!=\"Null\")){\r\n                    //      // thisObj.props.setTargetPath(\"Null\")\r\n                    //      window.location.href = thisObj.props.redirectTo;\r\n                    // }\r\n                    \r\n               } else {\r\n                    // Too many requests in one hour will cause the API to fail\r\n                    if (response.status === 429) {\r\n                         console.error(\"Permissions refresh will be available in up to an hour.\");\r\n                    } else {\r\n                         console.error(response);\r\n                    }\r\n               }\r\n          }\r\n          )\r\n          .catch(function (error) {\r\n               console.error(\"Failure in making API call.\" + error);\r\n          });\r\n     }\r\n\r\n    // Show username in the UI\r\n     setUsername(username: string): void {\r\n          const welcome = document.getElementById(\"welcome\");\r\n          if (welcome !== null)\r\n               welcome.innerText = \"\" + username;\r\n     }\r\n\r\n}\r\n\r\nexport default UserAuthentication;","import React, { Component } from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./Body.css\";\r\nimport Embed from \"./embed/Embed\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as config from \"../../Config\";\r\n\r\nclass M_body extends React.Component {\r\n     render() {\r\n          return (\r\n               <div className=\"main-body\">\r\n                    <Embed\r\n                         report={this.props.report}\r\n                         workspace={this.props.workspace}\r\n                         page={this.props.page}\r\n                         setTargetPath={this.props.setTargetPath}\r\n                         getTargetPath={this.props.getTargetPath}\r\n                         setAppliedFilters={this.props.setAppliedFilters}\r\n                         getAppliedFilters={this.props.getAppliedFilters}\r\n                         sendHome={() => {\r\n                              this.props.sendHome();\r\n                         }}\r\n                    >\r\n                         {\" \"}\r\n                    </Embed>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default M_body;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./App.css\";\r\nimport Top_bar from \"./components/top-bar/top-bar\";\r\nimport M_body from \"./components/main-body/Body\";\r\nimport Embed from \"./components/main-body/embed/Embed\";\r\nimport * as config from \"./Config\";\r\nimport UserAuthentication from \"./components/authentication/userAuthentication\";\r\nimport { getSupportedCodeFixes } from \"typescript\";\r\n\r\nclass Home extends React.Component {\r\n     constructor() {\r\n          super(this.props);\r\n\r\n          // this.state = { redirectTo: this.props.redirectTo };\r\n     }\r\n     render() {\r\n          return (\r\n               <React.Fragment>\r\n                    <div>\r\n                         <Top_bar />\r\n                    </div>\r\n\r\n                    {/* <UserAuthentication\r\n                         redirectTo={this.props.redirectTo}\r\n                         setTargetPath={this.props.setTargetPath}\r\n                    /> */}\r\n                    <div>\r\n                         {/* <M_body\r\n                              report=\"f891e3fa-98d2-4f31-88be-4b6309b91259\"\r\n                              workspace={config.workspaceId}\r\n                              page=\"ReportSection65b9b0ba398295b02a0c\"\r\n                         /> */}\r\n                         {/* <Embed></Embed> */}\r\n                    </div>\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\n// import \"./App.css\";\r\nimport Top_bar from \"../../components/top-bar/top-bar\";\r\nimport M_body from \"../../components/main-body/Body\";\r\nimport Embed from \"../../components/main-body/embed/Embed\";\r\nimport UserAuthentication from \"../../components/authentication/userAuthentication\";\r\nimport \"./GB_Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Acc_Logo_All_White_RGB from \"../../resources/images/GBeacon/Acc_Logo_All_White_RGB.svg\";\r\n\r\nclass GB_Home extends React.Component {\r\n     render() {\r\n          return (\r\n               <React.Fragment>\r\n                    {/* <!-- Main Body --> */}\r\n                    <div id=\"mainBody\">\r\n                         <div id=\"GBeaconBackground\">\r\n                              <img\r\n                                   src={Acc_Logo_All_White_RGB}\r\n                                   class=\"ACN_tr_logo\"\r\n                              />\r\n\r\n                              <div>\r\n                                   <div id=\"MainTitle\">\r\n                                        <h3 id=\"smallWhiteText\">\r\n                                             Global Growth Priorities <br />\r\n                                             <l id=\"bigWhiteText\">\r\n                                                  GrowthBeacon\r\n                                             </l>\r\n                                        </h3>\r\n                                        <p id=\"blueSubtext\">\r\n                                             Explore all financials results\r\n                                             about Accenture’s <br /> focus to\r\n                                             next wave of growth.\r\n                                        </p>\r\n                                   </div>\r\n\r\n                                   <div className=\"buttonsPosition\">\r\n                                        <Link\r\n                                             id=\"leftButton\"\r\n                                             to={\"/GrowthBeacon/Priorities\"}\r\n                                             className=\"L-button\"\r\n                                        >\r\n                                             Priorities &nbsp;{\" \"}\r\n                                             <i class=\"fas fa-arrow-right\"></i>\r\n                                        </Link>\r\n\r\n                                        <Link\r\n                                             to={\"/GrowthBeacon/Industries\"}\r\n                                             className=\"L-button\"\r\n                                        >\r\n                                             Industries &nbsp;{\" \"}\r\n                                             <i class=\"fas fa-arrow-right\"></i>\r\n                                        </Link>\r\n                                   </div>\r\n                              </div>\r\n                         </div>\r\n                    </div>\r\n                    {/* <!-- End Main Body --> */}\r\n\r\n                    {/* <!-- Footer --> */}\r\n                    <div class=\"footer\">\r\n                         {/* <!-- <form class=\"form-inline my-2 my-lg-0\"  style=\"padding-top: .5%;\"> -->\r\n                              \r\n                              <!-- <span data-toggle=\"modal\" data-target=\"#WNModal\" style=\"margin-left: 10%;\">\r\n                                   \r\n                                   <button>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.556\" height=\"15.556\" viewBox=\"0 0 15.556 15.556\"\r\n                                             style=\"margin-bottom: 5px;\">\r\n                                             <path id=\"Rectángulo_235\" data-name=\"Rectángulo 235\" d=\"M3,3V8H8V3H3M0,0H11V11H0Z\" transform=\"translate(7.778) rotate(45)\"/>\r\n                                        </svg>\r\n                                        Help and Assumptions \r\n                                   </button>   \r\n                              </span> -->\r\n                                   */}\r\n                         <a\r\n                              id=\"aFooter\"\r\n                              href=\"mailto:FBM_PA_DASFeedback@accenture.com?subject=Feedback on Growth Beacon\"\r\n                         >\r\n                              {/* <!-- type=\"button\" data-tooltip=\"tooltip\" data-toggle=\"tooltip\" data-placement=\"top\" \r\n                                   title=\"Email us!\" class=\"nav-link btn btn-light feedback\" --> */}\r\n                              <svg\r\n                                   xmlns=\"http://www.w3.org/2000/svg\"\r\n                                   width=\"16\"\r\n                                   height=\"14\"\r\n                                   viewBox=\"0 0 16 14\"\r\n                                   className=\"iconBump\"\r\n                              >\r\n                                   <path\r\n                                        id=\"Polígono_10\"\r\n                                        data-name=\"Polígono 10\"\r\n                                        d=\"M8,5.039,4.308,11.5h7.384L8,5.039M8,0l8,14H0Z\"\r\n                                   />\r\n                              </svg>\r\n                              Give us your feedback\r\n                         </a>\r\n                         {/* <p>\r\n                                   <small>\r\n                                        Copyright 2021 <b>Accenture</b>. All rights reserved. <i>Highly confidential. Not to be distributed further without authorization of the sender.</i>\r\n                                   </small>\r\n                              </p> */}\r\n                    </div>\r\n                    {/* <!-- End Footer --> */}\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default GB_Home;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\n// import \"./App.css\";\r\nimport Top_bar from \"../../components/top-bar/top-bar\";\r\nimport M_body from \"../../components/main-body/Body\";\r\nimport Embed from \"../../components/main-body/embed/Embed\";\r\nimport * as config from \"../../Config\";\r\nclass GB_Priorities extends React.Component {\r\n     render() {\r\n          return (\r\n               <React.Fragment>\r\n                    {/* <div>\r\n                         <Top_bar section=\"Priorities\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                         <M_body\r\n                              report=\"6a0431b1-28c9-49e8-8ab2-fee2c53abce7\"\r\n                              workspace={config.workspaceId}\r\n                              page=\"ReportSection65b9b0ba398295b02a0c\"\r\n                              setTargetPath={this.props.setTargetPath}\r\n                              getTargetPath={this.props.getTargetPath}\r\n                              setAppliedFilters={this.props.setAppliedFilters}\r\n                              getAppliedFilters={this.props.getAppliedFilters}\r\n                              sendHome={() => {\r\n                                   this.props.sendHome();\r\n                              }}\r\n                         />\r\n                         \r\n                    </div> */}\r\n\r\n                    <Embed\r\n                         report={config.reportId}\r\n                         workspace={config.workspaceId}\r\n                         setTargetPath={this.props.setTargetPath}\r\n                         getTargetPath={this.props.getTargetPath}\r\n                         setAppliedFilters={this.props.setAppliedFilters}\r\n                         getAppliedFilters={this.props.getAppliedFilters}\r\n                         sendHome={() => {\r\n                              this.props.sendHome();\r\n                         }}\r\n                    >\r\n                         <Top_bar section=\"Priorities\" />\r\n                    </Embed>\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default GB_Priorities;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\n// import \"./App.css\";\r\nimport Top_bar from \"../../components/top-bar/top-bar\";\r\nimport M_body from \"../../components/main-body/Body\";\r\nimport Embed from \"../../components/main-body/embed/Embed\";\r\nimport * as config from \"../../Config\";\r\n\r\nclass GB_Industries extends React.Component {\r\n     render() {\r\n          return (\r\n               <React.Fragment>\r\n                    {/* <div>\r\n                         <Top_bar section=\"industries\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                         <M_body\r\n                              report=\"f891e3fa-98d2-4f31-88be-4b6309b91259\"\r\n                              workspace={config.workspaceId}\r\n                              page=\"ReportSection\"\r\n                              setTargetPath={this.props.setTargetPath}\r\n                              getTargetPath={this.props.getTargetPath}\r\n                              setAppliedFilters={this.props.setAppliedFilters}\r\n                              getAppliedFilters={this.props.getAppliedFilters}\r\n                              sendHome={() => {\r\n                                   this.props.sendHome();\r\n                              }}\r\n                         />\r\n                         \r\n                    </div> */}\r\n                    <Embed\r\n                         report={config.reportId}\r\n                         workspace={config.workspaceId}\r\n                         setTargetPath={this.props.setTargetPath}\r\n                         getTargetPath={this.props.getTargetPath}\r\n                         setAppliedFilters={this.props.setAppliedFilters}\r\n                         getAppliedFilters={this.props.getAppliedFilters}\r\n                         sendHome={() => {\r\n                              this.props.sendHome();\r\n                         }}\r\n                    >\r\n                         <Top_bar section=\"industries\" />\r\n                    </Embed>\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default GB_Industries;\r\n","import React from \"react\";\r\n// import reactDom from 'react-dom';\r\nimport GB_Home from \"./GB_Home\";\r\nimport GB_Priorities from \"./GB_Priorities\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nclass GB_App extends React.Component {\r\n     render() {\r\n          return (\r\n               <div>\r\n                    <Routes>\r\n                         <Route path=\"/\" element={<GB_Home />} />\r\n\r\n                         <Route\r\n                              path=\"/Priorities\"\r\n                              element={<GB_Priorities />}\r\n                         />\r\n\r\n                         {/* {this.state.reports.map((report) => (\r\n          <Route exact path={\"/ReportPage_\" + report.R_Name.replace(\" \",\"_\")} \r\n            element={<ReportPage report={report} R_Name={report.R_Name} />}\r\n          />\r\n        ))} */}\r\n                    </Routes>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default GB_App;\r\n","import React, { Component } from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./SideBar.css\";\r\nimport logo from \"./logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserAuthentication from \"../authentication/userAuthentication\";\r\nclass SideBar extends React.Component {\r\n     constructor() {\r\n          super();\r\n\r\n          // this.state = { redirectTo: this.props.redirectTo };\r\n     }\r\n\r\n     render() {\r\n          return (\r\n               <div>\r\n                    <img src={logo} className=\"SB-logo\" alt=\"logo\" />\r\n                    <Link to=\"/\">\r\n                         <button\r\n                              id=\"welcome\"\r\n                              className=\"PannelButton\"\r\n                              onClick={() => this.userPage()}\r\n                         >\r\n                              Login\r\n                         </button>\r\n                    </Link>\r\n                    <Link to=\"/\">\r\n                         <button className=\"PannelButton\">Home</button>\r\n                    </Link>\r\n\r\n                    <button className=\"PannelButton\">Reports</button>\r\n                    <button className=\"PannelButton\">Settings</button>\r\n\r\n                    {/* <UserAuthentication /> */}\r\n                    <UserAuthentication\r\n                         redirectTo={this.props.redirectTo}\r\n                         getTargetPath={this.props.getTargetPath}\r\n                         setTargetPath={this.props.setTargetPath}\r\n                    />\r\n               </div>\r\n          );\r\n     }\r\n\r\n     userPage() {\r\n          const welcome = document.getElementById(\"welcome\");\r\n          if (welcome !== null) {\r\n               if (welcome.innerText !== \"Login\") {\r\n                    let userName = welcome.innerText\r\n                         .toLowerCase()\r\n                         .split(\" \")\r\n                         .reverse()\r\n                         .join(\".\")\r\n                         .replace(\",\", \"\");\r\n                    let peopleLink =\r\n                         \"https://people.accenture.com/People/user/\" + userName;\r\n                    console.log(userName);\r\n                    console.log(peopleLink);\r\n                    window.location.href = peopleLink;\r\n               }\r\n          }\r\n     }\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport logo from \"../logo.svg\";\r\nimport \"./styles.css\";\r\n\r\nclass RP_MainBody extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"MainTitle\"> {this.props.report.R_Name} </h1>\r\n                {/* <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <p className=\"top-pad\">Details yet not defined.</p>\r\n                    <a\r\n                        className=\"App-link\"\r\n                        href=\"https://reactjs.org\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        Learn React\r\n                    </a>\r\n                </header> */}\r\n                <div className=\"pwbi\" align=\"center\">\r\n                    <iframe\r\n                        class=\"embebed_pbi\"\r\n                        src=\"https://app.powerbi.com/reportEmbed?reportId=46e97962-3e83-4a88-93c3-51093e425779&autoAuth=true&filterPaneEnabled=false&navContentPaneEnabled=false&ctid=e0793d39-0939-496d-b129-198edd916feb&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLXVzLW5vcnRoLWNlbnRyYWwtcmVkaXJlY3QuYW5hbHlzaXMud2luZG93cy5uZXQvIn0%3D&pageName=ReportSection638c9f33c2d5831d432d\"\r\n                        frameborder=\"0\"\r\n                        // allowFullScreen=\"true\"\r\n                    ></iframe>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RP_MainBody;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./App.css\";\r\nimport SideBar from \"../../components/reportCatalog/SideBar\";\r\nimport RP_MainBody from \"../../components/reportCatalog/reportPage-comp/mainBody\";\r\n\r\nclass ReportPage extends React.Component {\r\n     render() {\r\n          return (\r\n               <React.Fragment>\r\n                    <div class=\"splitleft\">\r\n                         <SideBar />\r\n                    </div>\r\n\r\n                    <div class=\"splitright\">\r\n                         <div>\r\n                              <RP_MainBody report={this.props.report} />\r\n                         </div>\r\n                    </div>\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default ReportPage;\r\n","import React, { Component } from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./rClgTopBar.css\";\r\nimport logo from \"./logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nclass RCtlgTopBar extends React.Component {\r\n     render() {\r\n          return (\r\n               <div className=\"top-bar\">\r\n                    {/* <img src={logo} className=\"SB-logo\" alt=\"logo\" /> */}\r\n                    <Link to=\"/\" id=\"Welcome\" className=\"UserName\">\r\n                         Sign in\r\n                    </Link>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default RCtlgTopBar;\r\n","import React, { Component } from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./ReportPreview.css\";\r\nimport logo from \"./logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ReportPreview extends React.Component {\r\n     render() {\r\n          return (\r\n               <Link\r\n                    to={\r\n                         this.props.report.linkTo == null\r\n                              ? \"/ReportPage_\" +\r\n                                this.props.report.R_Name.replace(\" \", \"_\")\r\n                              : this.props.report.linkTo\r\n                    }\r\n               >\r\n                    <button className=\"SubPannel\">\r\n                         <img src={logo} className=\"SP-img\" alt=\"logo\" />\r\n                         <h3>{this.props.report.R_Name}</h3>\r\n                         <p className=\"top-pad\">\r\n                              {this.props.report.shrt_Summary}\r\n                         </p>\r\n                    </button>\r\n               </Link>\r\n          );\r\n     }\r\n}\r\n\r\nexport default ReportPreview;\r\n","import React, { Component } from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./Gallery.css\";\r\nimport ReportPreview from \"./ReportPreview\";\r\n\r\nclass Gallery extends React.Component {\r\n    state = { reports: this.props.reports };\r\n    render() {\r\n        return (\r\n            <div className=\"Pannel\">\r\n                {this.state.reports.map((report) => (\r\n                    <ReportPreview key={report.id} report={report} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\n// import logo from \"../logo.svg\";\r\nimport \"./Body.css\";\r\nimport RCtlgTopBar from \"../rClgTopBar\";\r\nimport Gallery from \"./body-components/Gallery\";\r\n\r\nclass MainBody extends React.Component {\r\n     render() {\r\n          return (\r\n               <React.Fragment>\r\n                    {/* <div className=\"top-bar\">\r\n                         <RCtlgTopBar></RCtlgTopBar>\r\n                    </div> */}\r\n                    <div className=\"main-body\">\r\n                         <Gallery reports={this.props.reports} />\r\n                    </div>\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default MainBody;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\nimport \"./App.css\";\r\nimport Top_bar from \"../../components/top-bar/top-bar\";\r\nimport SideBar from \"../../components/reportCatalog/SideBar\";\r\nimport MainBody from \"../../components/reportCatalog/home-comp/Body\";\r\nimport UserAuthentication from \"../../components/authentication/userAuthentication\";\r\n\r\nclass RClgHome extends React.Component {\r\n     render() {\r\n          let targetPath = this.props.getTargetPath();\r\n          console.log(\"TARGET PATH:   \" + targetPath);\r\n          console.log(targetPath);\r\n          // console.log(null);\r\n          return (\r\n               <React.Fragment>\r\n                    <div class=\"splitleft\">\r\n                         <SideBar\r\n                              redirectTo={this.props.redirectTo}\r\n                              setTargetPath={this.props.setTargetPath}\r\n                              getTargetPath={this.props.getTargetPath}\r\n                         />\r\n                    </div>\r\n                    {/* <UserAuthentication /> */}\r\n                    <div class=\"splitright\">\r\n                         <div>\r\n                              <MainBody reports={this.props.reports} />\r\n                         </div>\r\n                    </div>\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default RClgHome;\r\n","import React from \"react\";\r\n// import reactDom from \"react-dom\";\r\n// import \"./App.css\";\r\nimport Top_bar from \"../../components/top-bar/top-bar\";\r\nimport M_body from \"../../components/main-body/Body\";\r\nimport Embed from \"../../components/main-body/embed/Embed\";\r\nimport * as config from \"../../Config\";\r\nimport \"./TestStyle.css\";\r\n\r\nclass TestReport extends React.Component {\r\n     render() {\r\n          return (\r\n               <React.Fragment>\r\n                    {/* <div>\r\n                         <Top_bar section=\"industries\" />\r\n                    </div> */}\r\n\r\n                    <div\r\n                    // id=\"Body\"\r\n                    >\r\n                         <Embed\r\n                              report=\"7fa6d624-e0cf-428b-b23b-c55950a6d590\"\r\n                              workspace=\"d95f98a4-ea38-4386-8ee8-efc6f0c719ec\"\r\n                              page=\"ReportSection\"\r\n                              setTargetPath={this.props.setTargetPath}\r\n                              getTargetPath={this.props.getTargetPath}\r\n                              setAppliedFilters={this.props.setAppliedFilters}\r\n                              getAppliedFilters={this.props.getAppliedFilters}\r\n                              sendHome={() => {\r\n                                   this.props.sendHome();\r\n                              }}\r\n                         ></Embed>\r\n                         {/* <Embed></Embed> */}\r\n                    </div>\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default TestReport;\r\n","import React, { useState } from \"react\";\r\n// import reactDom from \"react-dom\";\r\n// import \"./App.css\";\r\nimport Top_bar from \"../../components/top-bar/top-bar\";\r\nimport M_body from \"../../components/main-body/Body\";\r\nimport Embed from \"../../components/main-body/embed/Embed\";\r\nimport * as config from \"../../Config\";\r\nimport \"./TestStyle.css\";\r\n\r\n// const [isExportInProgress, setIsExportInProgress] = useState < boolean > false;\r\n// const [error, setError] = useState < string > \"\";\r\n\r\n// const [isExportInProgress, setIsExportInProgress] = useState(false);\r\n// const [error, setError] = useState(\"\");\r\n// const [state, setState] = useState(0);\r\n\r\n// function toggleExportProgressState() {\r\n//      setIsExportInProgress((prevState) => !prevState);\r\n// }\r\n\r\nclass TestReport48 extends React.Component {\r\n     render() {\r\n          return (\r\n               <React.Fragment>\r\n                    {/* <div>\r\n                         <Top_bar section=\"industries\" />\r\n                    </div> */}\r\n\r\n                    <div id=\"Body\">\r\n                         <Embed\r\n                              report=\"36ed2a5c-1209-4720-a651-e557a6d1008f\"\r\n                              workspace=\"3fab8396-2540-43b3-9b32-a532bed12660\"\r\n                              page=\"ReportSection3\"\r\n                              setTargetPath={this.props.setTargetPath}\r\n                              getTargetPath={this.props.getTargetPath}\r\n                              setAppliedFilters={this.props.setAppliedFilters}\r\n                              getAppliedFilters={this.props.getAppliedFilters}\r\n                              sendHome={() => {\r\n                                   this.props.sendHome();\r\n                              }}\r\n                              // isExportInProgress={isExportInProgress}\r\n                              // setError={() => setError()}\r\n                              // toggleExportProgressState={() => {\r\n                              //      toggleExportProgressState();\r\n                              // }}\r\n                              // updateApp={setState}\r\n                         ></Embed>\r\n                         {/* <Embed></Embed> */}\r\n                    </div>\r\n               </React.Fragment>\r\n          );\r\n     }\r\n}\r\n\r\nexport default TestReport48;\r\n","import React from \"react\";\r\n// import reactDom from 'react-dom';\r\nimport \"./App.css\";\r\nimport Home from \"./OldHome\";\r\nimport GB_App from \"./subsites/Growth-Beacon/GB\";\r\nimport GB_Industries from \"./subsites/Growth-Beacon/GB_Industries\";\r\nimport GB_Priorities from \"./subsites/Growth-Beacon/GB_Priorities\";\r\nimport { Routes, Route, Link, useNavigate } from \"react-router-dom\";\r\nimport GB_Home from \"./subsites/Growth-Beacon/GB_Home\";\r\nimport ReportPage from \"./subsites/reportCatalog/ReportPage\";\r\nimport RClgHome from \"./subsites/reportCatalog/rClgHome\";\r\nimport TestReport from \"./subsites/TestWork47/Report\";\r\nimport TestReport48 from \"./subsites/TestWork48/Report\";\r\n// import { useHistory } from 'react-router';\r\nclass App extends React.Component {\r\n     // state = {\r\n     //      targetPath: \"Null\",\r\n     //      reports: [\r\n     //           {\r\n     //                id: 1,\r\n     //                R_Name: \"Growth Beacon\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //                linkTo: \"/GrowthBeacon\",\r\n     //           },\r\n     //           {\r\n     //                id: 2,\r\n     //                R_Name: \"Report 2\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //           },\r\n     //           {\r\n     //                id: 3,\r\n     //                R_Name: \"Report 3\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //           },\r\n     //           {\r\n     //                id: 4,\r\n     //                R_Name: \"Report 4\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //           },\r\n     //           {\r\n     //                id: 5,\r\n     //                R_Name: \"Report 5\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //           },\r\n     //           {\r\n     //                id: 6,\r\n     //                R_Name: \"Report 6\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //           },\r\n     //           {\r\n     //                id: 7,\r\n     //                R_Name: \"Report 7\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //           },\r\n     //           {\r\n     //                id: 8,\r\n     //                R_Name: \"Report 8\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //           },\r\n     //           {\r\n     //                id: 9,\r\n     //                R_Name: \"Report 9\",\r\n     //                R_link: \"\",\r\n     //                shrt_Summary: \"A short description of this Report\",\r\n     //           },\r\n     //      ],\r\n     // };\r\n     constructor() {\r\n          super();\r\n\r\n          this.state = {\r\n               targetPath: null,\r\n               appliedFilters: null,\r\n               reports: [\r\n                    {\r\n                         id: 1,\r\n                         R_Name: \"Growth Beacon\",\r\n                         R_link: \"\",\r\n                         shrt_Summary: \"A short description of this Report\",\r\n                         linkTo: \"/GrowthBeacon\",\r\n                    },\r\n                    {\r\n                         id: 2,\r\n                         R_Name: \"Test Report 47\",\r\n                         R_link: \"\",\r\n                         linkTo: \"/TestReport47\",\r\n                         shrt_Summary: \"Report in workspace 47\",\r\n                    },\r\n                    {\r\n                         id: 3,\r\n                         R_Name: \"Test Dashboard\",\r\n                         R_link: \"\",\r\n                         linkTo: \"/TestDashboard\",\r\n                         shrt_Summary: \"Dashboard in workspace 47\",\r\n                    },\r\n                    {\r\n                         id: 4,\r\n                         R_Name: \"Test Report 48\",\r\n                         R_link: \"\",\r\n                         linkTo: \"/TestReport48\",\r\n                         shrt_Summary: \"Report in workspace 48\",\r\n                    },\r\n                    {\r\n                         id: 5,\r\n                         R_Name: \"Report 5\",\r\n                         R_link: \"\",\r\n                         shrt_Summary: \"A short description of this Report\",\r\n                    },\r\n                    {\r\n                         id: 6,\r\n                         R_Name: \"Report 6\",\r\n                         R_link: \"\",\r\n                         shrt_Summary: \"A short description of this Report\",\r\n                    },\r\n                    {\r\n                         id: 7,\r\n                         R_Name: \"Report 7\",\r\n                         R_link: \"\",\r\n                         shrt_Summary: \"A short description of this Report\",\r\n                    },\r\n                    {\r\n                         id: 8,\r\n                         R_Name: \"Report 8\",\r\n                         R_link: \"\",\r\n                         shrt_Summary: \"A short description of this Report\",\r\n                    },\r\n                    {\r\n                         id: 9,\r\n                         R_Name: \"Report 9\",\r\n                         R_link: \"\",\r\n                         shrt_Summary: \"A short description of this Report\",\r\n                    },\r\n               ],\r\n          };\r\n\r\n          this.setTargetPath = this.setTargetPath.bind(this);\r\n          this.getTargetPath = this.getTargetPath.bind(this);\r\n          this.getAppliedFilters = this.getAppliedFilters.bind(this);\r\n          this.setAppliedFilters = this.setAppliedFilters.bind(this);\r\n     }\r\n     // setTargetPath(newTargetPath) {\r\n\r\n     sendHome() {\r\n          let navigate = useNavigate();\r\n          navigate(\"/\");\r\n     }\r\n\r\n     setTargetPath(newTargetPath) {\r\n          this.state.targetPath = newTargetPath;\r\n          return;\r\n     }\r\n\r\n     getTargetPath() {\r\n          return this.state.targetPath;\r\n     }\r\n\r\n     setAppliedFilters(appliedFilters) {\r\n          this.state.appliedFilters = appliedFilters;\r\n          return;\r\n     }\r\n\r\n     getAppliedFilters() {\r\n          return this.state.appliedFilters;\r\n     }\r\n\r\n     render() {\r\n          return (\r\n               <div>\r\n                    <Routes>\r\n                         <Route\r\n                              path=\"/\"\r\n                              element={\r\n                                   <RClgHome\r\n                                        reports={this.state.reports}\r\n                                        redirectTo={this.state.targetPath}\r\n                                        setTargetPath={this.setTargetPath}\r\n                                        getTargetPath={this.getTargetPath}\r\n                                   />\r\n                              }\r\n                         />\r\n\r\n                         {/* <Route path=\"/\" element={<Home />} /> */}\r\n\r\n                         {/* Growth Beacon */}\r\n                         <Route path=\"/GrowthBeacon\" element={<GB_Home />} />\r\n                         <Route\r\n                              path=\"/GrowthBeacon/Priorities\"\r\n                              element={\r\n                                   <GB_Priorities\r\n                                        setTargetPath={this.setTargetPath}\r\n                                        getTargetPath={this.getTargetPath}\r\n                                        setAppliedFilters={\r\n                                             this.setAppliedFilters\r\n                                        }\r\n                                        getAppliedFilters={\r\n                                             this.getAppliedFilters\r\n                                        }\r\n                                        sendHome={() => {\r\n                                             this.sendHome();\r\n                                        }}\r\n                                   />\r\n                              }\r\n                         />\r\n                         <Route\r\n                              path=\"/GrowthBeacon/Industries\"\r\n                              element={\r\n                                   <GB_Industries\r\n                                        setTargetPath={this.setTargetPath}\r\n                                        getTargetPath={this.getTargetPath}\r\n                                        setAppliedFilters={\r\n                                             this.setAppliedFilters\r\n                                        }\r\n                                        getAppliedFilters={\r\n                                             this.getAppliedFilters\r\n                                        }\r\n                                        sendHome={() => {\r\n                                             this.sendHome();\r\n                                        }}\r\n                                   />\r\n                              }\r\n                         />\r\n\r\n                         <Route\r\n                              path=\"/TestReport47\"\r\n                              element={\r\n                                   <TestReport\r\n                                        setTargetPath={this.setTargetPath}\r\n                                        getTargetPath={this.getTargetPath}\r\n                                        setAppliedFilters={\r\n                                             this.setAppliedFilters\r\n                                        }\r\n                                        getAppliedFilters={\r\n                                             this.getAppliedFilters\r\n                                        }\r\n                                        sendHome={() => {\r\n                                             this.sendHome();\r\n                                        }}\r\n                                   />\r\n                              }\r\n                         />\r\n\r\n                         <Route\r\n                              path=\"/TestDashboard\"\r\n                              element={\r\n                                   <TestReport\r\n                                        setTargetPath={this.setTargetPath}\r\n                                        getTargetPath={this.getTargetPath}\r\n                                        setAppliedFilters={\r\n                                             this.setAppliedFilters\r\n                                        }\r\n                                        getAppliedFilters={\r\n                                             this.getAppliedFilters\r\n                                        }\r\n                                        sendHome={() => {\r\n                                             this.sendHome();\r\n                                        }}\r\n                                   />\r\n                              }\r\n                         />\r\n\r\n                         <Route\r\n                              path=\"/TestReport48\"\r\n                              element={\r\n                                   <TestReport48\r\n                                        setTargetPath={this.setTargetPath}\r\n                                        getTargetPath={this.getTargetPath}\r\n                                        setAppliedFilters={\r\n                                             this.setAppliedFilters\r\n                                        }\r\n                                        getAppliedFilters={\r\n                                             this.getAppliedFilters\r\n                                        }\r\n                                        sendHome={() => {\r\n                                             this.sendHome();\r\n                                        }}\r\n                                   />\r\n                              }\r\n                         />\r\n\r\n                         {this.state.reports.map((report) => (\r\n                              <Route\r\n                                   exact\r\n                                   path={\r\n                                        \"/ReportPage_\" +\r\n                                        report.R_Name.replace(\" \", \"_\")\r\n                                   }\r\n                                   element={\r\n                                        <ReportPage\r\n                                             report={report}\r\n                                             R_Name={report.R_Name}\r\n                                             setTargetPath={this.setTargetPath}\r\n                                             getTargetPath={this.getTargetPath}\r\n                                             sendHome={() => {\r\n                                                  this.sendHome();\r\n                                             }}\r\n                                        />\r\n                                   }\r\n                              />\r\n                         ))}\r\n                         {/* {this.state.reports.map((report) => (\r\n          <Route exact path={\"/ReportPage_\" + report.R_Name.replace(\" \",\"_\")} \r\n            element={<ReportPage report={report} R_Name={report.R_Name} />}\r\n          />\r\n        ))} */}\r\n                    </Routes>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default App;\r\n","// ----------------------------------------------------------------------------\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n// ----------------------------------------------------------------------------\r\n\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n     // <React.StrictMode>\r\n     //     <App />\r\n     // </React.StrictMode>,\r\n     <React.StrictMode>\r\n          <BrowserRouter basename=\"/prueba3\">\r\n               <App />\r\n          </BrowserRouter>\r\n     </React.StrictMode>,\r\n     document.getElementById('root')\r\n   );"],"sourceRoot":""}